import
	crow/c-types: c-char, c-float, c-int, long, u-int

GLbitfield alias
	u-int
GLboolean alias
	bool
GLchar alias
	c-char
GLint alias
	c-int
GLintptr alias
	long
GLsizei alias
	c-int
GLsizeiptr alias
	long
GLubyte alias
	nat8
GLuint alias
	u-int
GLfloat alias
	c-float

glActiveTexture void(texture GLenum) extern<GL> summon

glAttachShader void(program GLuint, shader GLuint) extern<GL> summon

glBindBuffer void(target GLenum, buffer GLuint) extern<GL> summon

glBindTexture void(target GLenum, texture GLuint) extern<GL> summon

glBufferData void(
	target GLenum,
	size GLsizeiptr,
	buffer-data any-const-pointer,
	usage GLenum,
) extern<GL> summon

glBufferSubData void(
	target GLenum,
	offset GLintptr,
	size GLsizeiptr,
	buffer-data any-const-pointer,
) extern<GL> summon

glClear void(mask GLbitfield) extern<GL> summon

glClearColor void(red GLfloat, green GLfloat, blue GLfloat, alpha GLfloat) extern<GL> summon

glCompileShader void(shader GLuint) extern<GL> summon

glCreateProgram GLuint() extern<GL> summon

glCreateShader GLuint(type GLenum) extern<GL> summon

glCullFace void(mode GLenum) extern<GL> summon

glDeleteBuffers void(n GLsizei, buffers GLuint*) extern<GL> summon

glDeleteProgram void(program GLuint) extern<GL> summon

glDeleteShader void(shader GLuint) extern<GL> summon

glDeleteTextures void(n GLsizei, textures GLuint*) extern<GL> summon

glDrawArrays void(mode GLenum, first GLint, count GLsizei) extern<GL> summon

glEnable void(cap GLenum) extern<GL> summon
glEnableVertexAttribArray void(index GLuint) extern<GL> summon

glGenBuffers void(n GLsizei, buffers GLuint mut*) extern<GL> summon

glGenTextures void(n GLsizei, textures GLuint mut*) extern<GL> summon

glGetError GLenum() extern<GL> summon

glGetProgramInfoLog void(
	program GLuint,
	bufSize GLsizei,
	length cell GLsizei,
	infoLog GLchar mut*,
) extern<GL> summon

glGetProgramiv void(program GLuint, pname GLenum, params cell GLint) extern<GL> summon

glGetShaderInfoLog void(
	shader GLuint,
	bufSize GLsizei,
	length cell GLsizei,
	infoLog GLchar mut*,
) extern<GL> summon

glGetShaderiv void(reader GLuint, pname GLenum, params cell GLint) extern<GL> summon

glGetString c-string(name GLenum) extern<GL> summon

glGetUniformLocation GLint(program GLuint, name GLchar*) extern<GL> summon

glLinkProgram void(program GLuint) extern<GL> summon

glShaderSource void(
	shader GLuint,
	count GLsizei,
	string GLchar**,
	length GLint*,
) extern<GL> summon

glTexImage2D void(
	target GLenum,
	level GLint,
	internalformat GLenum,
	width GLsizei,
	height GLsizei,
	border GLint,
	format GLenum,
	type GLenum,
	pixels any-const-pointer,
) extern<GL> summon

glTexParameteri void(target GLenum, pname GLenum, param GLenum) extern<GL> summon

glUniform1i void(location GLint, v0 GLint) extern<GL> summon

glUniformMatrix3fv void(
	location GLint,
	count GLsizei,
	transpose GLboolean,
	value GLfloat*,
) extern<GL> summon

glUseProgram void(program GLuint) extern<GL> summon

glVertexAttribPointer void(
	index GLuint,
	size GLint,
	type GLenum,
	normalized GLboolean,
	stride GLsizei,
	pointer any-const-pointer,
) extern<GL> summon

GL_FALSE GLint() noctx
	0
GL_TRUE GLint() noctx
	1

GLenum enum<u-int> extern
	GL_NO_ERROR = 0
	GL_TRIANGLES = 4
	GL_TRIANGLE_STRIP = 5
	GL_TRIANGLE_FAN = 6
	GL_FRONT = 0x0404
	GL_BACK = 0x0405
	GL_INVALID_ENUM = 0x0500
	GL_INVALID_VALUE = 0x0501
	GL_INVALID_OPERATION = 0x0502
	GL_STACK_OVERFLOW = 0x0503
	GL_STACK_UNDERFLOW = 0x0504
	GL_OUT_OF_MEMORY = 0x0505
	GL_TEXTURE_2D = 0x0de1
	GL_UNSIGNED_BYTE = 0x1401
	GL_FLOAT = 0x1406
	GL_RED = 0x1903
	GL_GREEN = 0x1904
	GL_BLUE = 0x1905
	GL_ALPHA = 0x1906
	GL_RGB = 0x1907
	GL_RGBA = 0x1908
	GL_EXTENSIONS = 0x1f03
	GL_TEXTURE0 = 0x84c0
	GL_ARRAY_BUFFER = 0x8892
	GL_STATIC_DRAW = 0x88e4
	GL_FRAGMENT_SHADER = 0x8b30
	GL_VERTEX_SHADER = 0x8b31
	GL_COMPILE_STATUS = 0x8b81
	GL_LINEAR = 0x2601
	GL_LINK_STATUS = 0x8b82
	GL_INFO_LOG_LENGTH = 0x8b84
	GL_TEXTURE_MAG_FILTER = 0x2800
	GL_TEXTURE_MIN_FILTER = 0x2801
	GL_TEXTURE_SWIZZLE_R = 0x8e42
	GL_TEXTURE_SWIZZLE_G = 0x8e43
	GL_TEXTURE_SWIZZLE_B = 0x8e44
	GL_TEXTURE_SWIZZLE_A = 0x8e45
	GL_CULL_FACE = 0x0B44

to-string string(a GLenum)
	a enum-to-string

GL_COLOR_BUFFER_BIT GLbitfield() noctx
	0x00004000

#version 300 es

#ifdef GL_ES
precision highp float;
#endif

in vec3 normal;
in vec2 texCoord;
in vec3 color;
out vec4 fragColor;

uniform sampler2D texSampler;

vec4 applyLight(const float l, const vec4 c) {
	return vec4(c.r * l, c.g * l, c.b * l, c.a);
}

vec4 mixColor(const vec3 color, const vec4 c) {
	return vec4(color.r * c.r, color.g * c.g, color.b * c.b, c.a);
}

void main() {
	const vec3 lightDirection = normalize(vec3(-1, -1, 1));
	const float lightIntensity = 2.0;
	const float ambientLight = 0.2;
	float lightAmount = ambientLight + lightIntensity * max(dot(-lightDirection, normal), 0.0);
	vec4 texColor = mixColor(color, texture(texSampler, texCoord));
	fragColor = applyLight(lightAmount, texColor);
}

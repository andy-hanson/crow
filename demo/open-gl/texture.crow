import
	OpenGL/gl:
		glBindTexture, glDeleteTextures, gl-ext, glGenTextures, glGetError, glTexImage2D,
		glTexParameteri
	OpenGL/headers:
		==, GL_LINEAR, GL_NO_ERROR, GL_RGBA, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_FILTER,
		GL_TEXTURE_2D, GLuint, GL_UNSIGNED_BYTE, to-string
	./load-bmp: height, image-data, width, with-bmp

# Remember to call 'free-texture'
load-texture-from-bmp GLuint(gl gl-ext, bmp-raw nat8[]) summon, unsafe
	bmp-raw with-bmp image =>
		texture mut GLuint = 0
		gl glGenTextures 1, &texture
		gl check-error "glGenTextures"

		gl glBindTexture GL_TEXTURE_2D, texture
		gl check-error "glBindTexture"
		w = image.width to-int32
		h = image.height to-int32
		image-data = image.image-data as-const
		gl glTexImage2D GL_TEXTURE_2D, 0, GL_RGBA, w, h, 0, GL_RGBA, GL_UNSIGNED_BYTE, image-data
		gl check-error "glTexImage2D"

		gl glTexParameteri GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR
		gl glTexParameteri GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR

		texture

-check-error void(gl gl-ext, step string) summon, unsafe
	err = gl glGetError
	assert err == GL_NO_ERROR : "Error loading image (in {step}): code {err to-string}"

free-texture void(gl gl-ext, tex-name GLuint) summon, unsafe
	gl glDeleteTextures 1, &tex-name

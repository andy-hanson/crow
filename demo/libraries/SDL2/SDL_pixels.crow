import
	crow/c-types: c-int
	crow/version: is-big-endian

+SDL_Color record(r nat8, g nat8, b nat8, a nat8) extern

+SDL_Palette record extern, mut
	ncolors c-int
	colors SDL_Color mut*
	version nat32
	refcount c-int

+SDL_PixelFormat record extern, mut
	format nat32
	palette SDL_Palette mut*
	BitsPerPixel nat8
	BytesPerPixel nat8
	padding nat16
	Rmask nat32
	Gmask nat32
	Bmask nat32
	Amask nat32
	Rloss nat8
	Gloss nat8
	Bloss nat8
	Aloss nat8
	Rshift nat8
	Gshift nat8
	Bshift nat8
	Ashift nat8
	refcount c-int
	next SDL_PixelFormat mut*

+SDL_PIXELFORMAT_RGBA32 nat32() bare, unsafe
	if is-big-endian
		SDL_PIXELFORMAT_RGBA8888
	else
		SDL_PIXELFORMAT_ABGR8888

-SDL_PIXELFORMAT_RGBA8888 nat32() bare, unsafe
	SDL_PIXELTYPE_PACKED32 SDL_DEFINE_PIXELFORMAT SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_8888, 32, 4

-SDL_PIXELFORMAT_ABGR8888 nat32() bare, unsafe
	SDL_PIXELTYPE_PACKED32 SDL_DEFINE_PIXELFORMAT SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_8888, 32, 4

-SDL_DEFINE_PIXELFORMAT nat32(
	type SDL_PixelType,
	order SDL_PackedOrder,
	layout SDL_PackedLayout,
	bits nat32,
	bytes nat32,
) bare
	format nat32 = (type.to << 24) | (order.to << 20) | (layout.to << 16)
	(1 << 28) | format | (bits << 8) | bytes

+SDL_PixelType enum nat32 storage
	SDL_PIXELTYPE_UNKNOWN
	SDL_PIXELTYPE_INDEX1
	SDL_PIXELTYPE_INDEX4
	SDL_PIXELTYPE_INDEX8
	SDL_PIXELTYPE_PACKED8
	SDL_PIXELTYPE_PACKED16
	SDL_PIXELTYPE_PACKED32
	SDL_PIXELTYPE_ARRAYU8
	SDL_PIXELTYPE_ARRAYU16
	SDL_PIXELTYPE_ARRAYU32
	SDL_PIXELTYPE_ARRAYF16
	SDL_PIXELTYPE_ARRAYF32

+SDL_PackedOrder enum nat32 storage
	SDL_PACKEDORDER_NONE
	SDL_PACKEDORDER_XRGB
	SDL_PACKEDORDER_RGBX
	SDL_PACKEDORDER_ARGB
	SDL_PACKEDORDER_RGBA
	SDL_PACKEDORDER_XBGR
	SDL_PACKEDORDER_BGRX
	SDL_PACKEDORDER_ABGR
	SDL_PACKEDORDER_BGRA

+SDL_PackedLayout enum nat32 storage
	SDL_PACKEDLAYOUT_NONE
	SDL_PACKEDLAYOUT_332
	SDL_PACKEDLAYOUT_4444
	SDL_PACKEDLAYOUT_1555
	SDL_PACKEDLAYOUT_5551
	SDL_PACKEDLAYOUT_565
	SDL_PACKEDLAYOUT_8888
	SDL_PACKEDLAYOUT_2101010
	SDL_PACKEDLAYOUT_1010102

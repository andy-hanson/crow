#!/usr/bin/env crow
import
	crow/io/net/http-server
	crow/io/net/http-types
	crow/io/print: out, print
	crow/io/stdin: read-stdin
	crow/parse: nat, parse
	./db
	./index.html as index-html string
	./index.js as index-js string
	./index.js.map as index-js-map string
	./model

main void() summon, (libc, lmdb, native, posix, sodium) extern
	with db : open-real-db
		handler http-handler = shared req => req handle-request db
		port nat16 = 8080
		with _ : port http-server handler
			out print "Serving at http://localhost:{port}; press enter to stop"
			_ = read-stdin

-handle-request http-response(req http-request, db db) summon, (lmdb, native, sodium) extern
	match req method
	as GET
		match req path
		as "/"
			index-html http-ok
		as "/index.js"
			index-js http-ok
		as "/index.js.map"
			index-js-map http-ok
		as "/posts"
			(("posts", db.list-posts.to),)::json http-ok
		as "/user-name"
			user = req.query["user"] ?? ""
			assert user-id ?= nat parse user ok : "Bad user" http-bad-query
			db user-name user-id http-ok
		as "/users"
			(("users", db.list-users.to),)::json http-ok
		else
			throw http-not-found
	as POST
		match req path
		as "/register"
			args register-args = req.body-json to
			match db register-user args
			as register-user-success user-id
				(("user", user-id.to),)::json http-ok
			as bad-user-name message
				throw "Bad user name: {message}" http-bad-query
			as user-already-exists
				throw "User already exists" http-bad-query
		as "/login"
			args login-args = req.body-json to
			cookie = db login args
			cookies cookies = ("login", "{cookie}"), ("max-age", "{cookie-expire-seconds}")
			(("user", cookie.user.to),)::json http-ok (cookies.set-cookie-header,)
		as "/post"
			args post-args = req.body-json to
			post = db add-post req.get-login-cookie, args.content
			response post-response = post,
			response.to::json http-ok
		else
			throw http-not-found

-get-login-cookie user-cookie(req http-request)
	cookies = req parse-cookies
	assert cookie ?= cookies["login"] : "Missing login cookie" http-forbidden
	(user-cookie parse cookie).ok ?? throw "Error parsing 'login' cookie" http-forbidden

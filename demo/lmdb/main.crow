#!/usr/bin/env crow
import
	crow/io/print: out, print
	crow/parse-command: parse-named-args, single-string-or-throw
	crow/serialize: from-bytes
	lmdb/main:
		database, from-lmdb-key, get, lmdb-key-flags, open-lmdb-env, read-transaction, set, stat,
		to, to-lmdb-key, with-block, write-transaction

main nat(args string[]) summon, (lmdb, native) extern
	command-name = !args.is-empty ? args[0]
	rest-args = !args.is-empty ? args[1 .. end]
	match command-name
	as get
		named-args = (rest-args parse-named-args ("path", "db-name", "key"))!
		path = named-args[0] single-string-or-throw "path"
		db-name = named-args[1] single-string-or-throw "db-name"
		key = named-args[2] single-string-or-throw "key"
		with env : path open-lmdb-env true
			with db : env database@(string, string) db-name
				value = with txn : env read-transaction
					txn get db, key ?? "none"
				out print value
				()
	as set
		named-args = (rest-args parse-named-args ("path", "db-name", "key", "value"))!
		path = named-args[0] single-string-or-throw "path"
		db-name = named-args[1] single-string-or-throw "db-name"
		key = named-args[2] single-string-or-throw "key"
		value = named-args[3] single-string-or-throw "value"
		with env : path open-lmdb-env true
			with db : env database@(string, string) db-name
				with txn : env write-transaction
					txn set db, key, value
				()
	as stat
		named-args = (rest-args parse-named-args ("path", "db-name"))!
		path = named-args[0] single-string-or-throw "path"
		db-name = named-args[1] single-string-or-throw "db-name"
		with env : path open-lmdb-env true
			with db : env database@(string, string) db-name
				out print with txn : env read-transaction
					txn stat db to
				()
	else
		out print usage
		1

-usage string()
	"""
Usage:
./main.crow get --path <file> --db-name <name> --key <key>
./main.crow set --path <file> --db-name <name> --key <key> --value <value>
./main.crow stat --path <file> --db-name <name>

Creates the DB file if it does not yet exist.
The file contains multiple named sub-dbs.
Each sub-db is a map from keys to values.

Example:
./main.crow set --path foo.db --db-name capitals --key indiana --value indianapolis
./main.crow get --path foo.db --db-name capitals --key indiana
"""

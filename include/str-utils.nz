import
	.bootstrap: == and arr byte char c-str data deref incr ptr-cast size str todo
	.collection.arr-utils: + arr-from-begin-end first has? tail

as-str str(bytes arr byte) unsafe noctx
	arr: bytes.size, bytes.data ptr-cast<char, byte>

to-c-str c-str(a str)
	a + "\0" data

to-str str(a c-str) unsafe noctx
	a arr-from-begin-end a.find-cstr-end

find-char-in-cstr c-str(a c-str, c char) unsafe noctx
	if a.deref == c
		a
	elif a.deref == "\0"
		| Did not find the char
		todo
	else
		a.incr find-char-in-cstr c

find-cstr-end c-str(a c-str) unsafe noctx
	a find-char-in-cstr "\0"

lstrip str(a str)
	if a.has? and: a.first == " "
		a.tail lstrip
	else
		a

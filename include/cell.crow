no-std
import
	.ptr: as-any-ptr, as-ref, ptr

###
Mutable reference to a single value.
Example:
```
c = cell<nat>: 1
assert: c[] == 1
c[] := c[] + 1
assert: c[] == 2
```
###
cell<?t> record mut
	subscript mut ?t

###
Treats a pointer as a cell.
UB if the pointer does not point to a mutable value.
###
as-cell cell ?t(p ptr ?t) noctx unsafe
	p.as-any-ptr as-ref

# Put `v` into the cell, and return the old value.
swap ?t(c cell ?t, v ?t) noctx
	res = c[]
	c[] := v
	res

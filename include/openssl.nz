| /usr/include/openssl/ossl_typ.h
ssl record
	by-ref
	dummy bool
ssl-ctx record
	| NOTE: This is a very large struct.
	| Luckily, you don't need direct access to its fields, you just use ssl methods to do that.
	by-ref
	dummy bool
ssl-method record
	| Same as above, this is a very large struct that you can treat opaquely.
	by-ref
	dummy bool
ssl-method record
	by-ref
	foo

| /usr/include/openssl/ssl.h
ssl-load-error-strings void() extern<"SSL_load_error_strings"> noctx summon
ssl-library-init int32() extern<"SSL_library_init"> noctx summon
ssl-ctx-new ssl-ctx(meth ssl-method) extern<"SSL_CTX_new"> noctx summon
ssl-v23-client-method ssl-method() extern<"SSLv23-client-method"> noctx summon

ssl-ctx-ctrl long(ctx ssl-ctx, cmd int32, larg long, parg any-ptr) extern<"SSL_CTX_ctrl"> noctx summon

ssl-ctrl-options int32()
	32
ssl-ctrl-mode int32()
	33

ssl-ctx-set-options long(s ssl-ctx, op long) noctx summon
	s ssl-ctx-ctrl ssl-ctrl-options, op, null
ssl-ctx-set-mode long(s ssl-ctx, op long) extern<"SSL_CTX_set_mode"> noctx summon
	s ssl-ctx-ctrl ssl-ctrl-mode, op, null

proto-select-cb alias
	fun-ptr5 int32 ssl ptr<str<byte>> ptr<ptr<byte>> ptr<byte> nat32 any-ptr

ssl-ctx-set-next-proto-select-cb void
	s ssl-ctx
	cb proto-select-cb
spec
	extern<"SSL_CTX_set_next_proto_select_cb">
	noctx
	summon

ssl-set-fd int32(s ssl, fd fd-t) extern<"SSL_set_fd"> noctx summon
ssl-connect int32(s ssl) extern<"SSL_connect"> noctx summon


ssl-new foo() extern<"SSL_new"> noctx summon
ssl-handshake foo() extern noctx summon
ssl-shutdown foo() extern<"SSL_shutdown"> noctx summon
ssl-free foo() extern<"SSL_free"> noctx summon
ssl-ctx-free foo() extern<"SSL_CTX_free"> noctx summon

| /usr/include/openssl/err.h
err-clear-error void() extern<"ERR_clear_error"> noctx summon
err-error-string c-str(e u-long, buf c-str) extern<"ERR_error_string"> noctx summon
err-get-error u-long() extern<"ERR_get_error"> noctx summon

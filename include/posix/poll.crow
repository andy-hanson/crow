# /usr/include/asm-generic/poll.h
no-std
import
	..bits: bits-intersect?
	..bool: bool
	..number: int16, int32
	..ptr: by-val, ptr
	.c-types: u-long
	.extra-types: fd-t

pollfd record mut
	fd fd-t
	events int16
	# mut, written to by 'poll'
	revents mut int16

pollin int16()
	# TODO: binary literals
	1
pollpri int16()
	# TODO: binary literals
	2
pollout int16()
	# TODO: binary literals
	4
pollerr int16()
	# TODO: binary literals
	8
pollhup int16()
	# TODO: binary literals
	16
pollnval int16()
	# TODO: binary literals
	32

# /usr/include/x86_64-linux-gnu/sys/poll.h
poll int32(fds ptr by-val<pollfd>, n-fds u-long, timeout int32) summon extern<"poll"> noctx

has-pollin? bool(revents int16)
	revents bits-intersect? pollin
has-pollpri? bool(revents int16)
	revents bits-intersect? pollpri
has-pollout? bool(revents int16)
	revents bits-intersect? pollout
has-pollerr? bool(revents int16)
	revents bits-intersect? pollerr
has-pollhup? bool(revents int16)
	revents bits-intersect? pollhup
has-pollnval? bool(revents int16)
	revents bits-intersect? pollnval

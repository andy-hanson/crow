# /usr/include/unistd.h
no-std
import
	..misc: void
	..ptr: any-ptr, ptr
	..private.bootstrap: c-str, int32, int64, nat
	.c-types: size_t
	.extra-types: err-t, fd-t
	.types: off_t

getcwd c-str(buf c-str, size size_t) unsafe extern<"getcwd"> noctx summon

readlink ssize_t(path c-str, buf c-str, len size_t) summon extern<"readlink"> noctx

close err-t(fd fd-t) summon extern<"close"> noctx
lseek off_t(f fd-t, offset off_t, whence int32) summon extern<"lseek"> noctx
read ssize_t(fd fd-t, buff any-ptr, n-bytes size_t) summon extern<"read"> noctx
# TODO: summon
write ssize_t(fd fd-t, buf any-ptr, n-bytes size_t) extern<"write"> noctx

pipe err-t(pipes pipes) summon extern<"pipe"> noctx

# The headers just use int[2], but this is easier to use from crow
pipes record mut
	write-pipe mut fd-t
	read-pipe mut fd-t

environ ptr c-str() unsafe global<"environ"> noctx

usleep void(micro-seconds nat) unsafe extern<"usleep"> noctx

ssize_t alias
	int64

rmdir err-t(path c-str) unsafe extern<"rmdir"> noctx

unlink err-t(path c-str) unsafe extern<"unlink"> noctx

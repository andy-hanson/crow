no-std
import
	../ptr: +, -, *, as-const, as-mut, mut-ptr
	./bootstrap: char8, c-str, none, opt, some, to-nat8
	./number-low-level: ==, nat64, wrap-add

###
Walk a c-str and return a pointer to the first occurrence of `c`.
If that is not found, return an empty option.
###
find-char-in-c-str c-str?(a c-str, c char8) unsafe noctx
	cur mut = a
	loop
		if cur->to-nat8 == c.to-nat8
			break cur some
		elif cur->to-nat8 == 0
			break none
		else
			cur := cur + 1
			continue

# Pointer to the end of a c-str.
find-c-str-end c-str(a c-str) unsafe noctx
	cur mut = a
	loop
		if cur->to-nat8 == 0
			break cur
		else
			cur := cur + 1
			continue

# Pointer to the end of a c-str.
find-c-str-end char8 mut*(a char8 mut*) unsafe noctx
	a.as-const.find-c-str-end as-mut

c-str-size nat64(a c-str) unsafe noctx
	a.find-c-str-end - a

c-str-size-incl-nul nat64(a c-str) unsafe noctx
	a.c-str-size wrap-add 1

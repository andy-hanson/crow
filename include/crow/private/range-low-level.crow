no-std
import
	../compare: <=, compare
	./number-low-level: nat64

###
Range of values. `low` is inclusive and `high` is exclusive.

Usable for any type with a comparison function.
###
range<a> record by-val
	low a
	high a

# Create a range from `low` (inclusive) to `high` (exclusive).
.. <a> range<a>(low a, high a) noctx compare<a>
	assert low <= high
	low, high

# Size of the range; depends on a `-` function existing.
size<a> nat64(a range a) noctx minus<a>
	a.high - a.low

minus<a> spec
	- nat64(a a, b a)

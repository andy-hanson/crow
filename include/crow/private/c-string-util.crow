no-std
import
	../number: ==, +, nat8, nat64
	../option: new, option
	../pointer: +, -, *, as-const, as-mut, mut-pointer
	./bootstrap: char8, c-string

+to char8(a nat8) builtin, noctx
+to nat8(a char8) builtin, noctx

###
Walk a c-string and return a pointer to the first occurrence of `c`.
If that is not found, return an empty option.
###
find-char-in-c-string c-string?(a c-string, c char8) noctx, unsafe
	cur mut = a
	loop
		if cur->to == c.to
			break cur,
		elif cur->to == 0
			break
		else
			cur +:= 1
			continue

# Pointer to the end of a c-string.
find-c-string-end c-string(a c-string) noctx, unsafe
	cur mut = a
	loop
		if cur->to::nat8 == 0
			break cur
		else
			cur +:= 1
			continue

# Pointer to the end of a c-string.
find-c-string-end char8 mut*(a char8 mut*) noctx, unsafe
	a.as-const.find-c-string-end as-mut

c-string-size nat64(a c-string) noctx, unsafe
	a.find-c-string-end - a

c-string-size-incl-nul nat64(a c-string) noctx, unsafe
	a.c-string-size + 1

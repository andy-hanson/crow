import
	../../parse

dummy-json-tests nat64()
	0

#TODO:MOVE
-to json(a parse-error)
	# TODO: include input/iter
	("expected", a.expected.to),

-verify[t] void(a t, s string) (json, t) to
	json parse s is a.to.ok
	json json = a to
	json.to::string is s

test
	json parse "potato" is ("potato", "potato".begin, "expected 'null'").error
	null::json verify "null"
	true verify "true"
	false verify "false"
	-3.0::float64 verify "-3"
	1.5::float64 verify "1.5"
	-1.5::float64 verify "-1.5"
	"j"::string verify "\"j\""
	"a\nb"::string verify "\"a\\nb\""
	"a\\nb"::string verify "\"a\\\\nb\""

	()::json[] verify "[]"
	(1::float64.to,)::json[] verify "[1]"
	(1::float64.to, true.to)::json[] verify "[1,true]"

	()::json[symbol] verify "\{}"
	(("a", 1::float64.to),)::json[symbol] verify "\{\"a\":1}"
	(("a", 1::float64.to), ("x\ny", true.to))::json[symbol] verify "\{\"a\":1,\"x\\ny\":true}"

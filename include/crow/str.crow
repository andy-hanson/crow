no-std
import
	./bool: bool
	./compare: comparison
	./col/arr: ~, arr, arr-compare, arr-equal?, empty?, size
	./private/number-low-level: ==, <=>, nat64
export
	./private/bootstrap: char, chars, c-str, str, to-char, to-nat8

~ str(a str, b str)
	a.chars ~ b.chars str

empty? bool(a str) noctx
	a.chars empty?

size-bytes nat64(a str) noctx
	a.chars size

== bool(a str, b str) trusted noctx
	a.chars arr-equal? b.chars
== bool(a char, b char) noctx
	a.to-nat8 == b.to-nat8

<=> comparison(a str, b str) trusted noctx
	a.chars arr-compare b.chars
<=> comparison(a char, b char) noctx
	a.to-nat8 <=> b.to-nat8

# TODO: this should be generic on all arrs
== bool(a arr char, b arr char) noctx
	a arr-equal? b
== bool(a arr str, b arr str) noctx
	a arr-equal? b

no-std
import
	./bool: bool
	./col/arr-util: each
	./col/mut-arr: ~=, move-to-arr!, mut-arr, new, pop-n!
	./misc: void
	./number: float64, int64, nat64
	./str: ==, char, chars, c-str, str
	./str-conv: to-str
	./str-util: to-str

writer record mut
	# TODO:PRIVATE
	chars char mut[]

write<a> spec
	~= void(writer writer, value a)

new writer()
	new new

move-to-str! str(a writer)
	a.chars.move-to-arr! str

backup! void(a writer)
	a backup! 1

backup! void(a writer, n nat64)
	a.chars pop-n! n

~= void(a writer, b char)
	a.chars ~= b

~= void(a writer, b c-str) unsafe
	a ~= b to-str

~= void(a writer, b str)
	a.chars ~= b chars

~= void(a writer, b bool)
	a ~= b to-str

~= void(a writer, b nat64)
	a ~= b to-str

~= void(a writer, b int64)
	a ~= b to-str

~= void(a writer, b float64)
	a ~= b to-str

write-quoted-str! void(out writer, a str)
	out ~= "\""
	a.chars each x =>
		if x == "\""
			out ~= "\\\""
		elif x == "\n"
			out ~= "\\n"
		elif x == "\r"
			out ~= "\\r"
		elif x == "\t"
			out ~= "\\t"
		else
			out ~= x
	out ~= "\""

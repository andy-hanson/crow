no-std
import
	../bool: bool, false, true
	../compare: compare
	../hash: hash-mix
	../misc: ->, data, void
	./mut-lookup: ~=, mut-lookup, in

mut-unordered-set<a> record mut
	# TODO:PRIVATE
	inner mut-lookup<a, void>

mut-unordered-set<a> mut-unordered-set a() data<a> compare<a> hash-mix<a>
	mut-lookup mut-unordered-set

~= <a> void(a mut-unordered-set a, value a) data<a> compare<a> hash-mix<a>
	a.inner ~= value -> void

in<a> bool(value a, a mut-unordered-set a) data<a> compare<a> hash-mix<a>
	value in a.inner

try-add!<a> bool(a mut-unordered-set a, value a) data<a> compare<a> hash-mix<a>
	# TODO:PERF do it without two lookups
	if value in a
		false
	else
		a ~= value
		true

# TODO: lots more

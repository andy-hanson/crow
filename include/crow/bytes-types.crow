###
Types for filling space.
This is useful for external libraries where the size of a type matters but not its content.
###

no-std
import
	./misc: new
	./number: nat16, nat32, nat64, new

# 2-byte type.
bytes2 record by-val extern
	.n0 nat16

new bytes2() noctx
	(),

# 4-byte type.
bytes4 record by-val extern
	.n0 nat32

new bytes4() noctx
	(),

# 8-byte type.
bytes8 record by-val extern
	.n0 nat64

new bytes8() noctx
	(),

# 14-byte type.
bytes12 record by-val extern
	.n0 bytes8
	.n1 bytes4

new bytes12() noctx
	(), ()

# 14-byte type.
bytes14 record by-val extern
	.n0 bytes12
	.n1 bytes2

new bytes14() noctx
	(), ()

# 16-byte type.
bytes16 record by-val extern
	.n0 bytes8
	.n1 bytes8

new bytes16() noctx
	(), ()

# 32-byte type.
bytes32 record by-val extern
	.n0 bytes16
	.n1 bytes16

new bytes32() noctx
	(), ()

bytes40 record by-val extern
	.n0 bytes32
	.n1 bytes8

new bytes40() noctx
	(), ()

# 48-byte type.
bytes48 record by-val extern
	.n0 bytes32
	.n1 bytes16

new bytes48() noctx
	(), ()

# 64-byte type.
bytes64 record by-val extern
	.n0 bytes32
	.n1 bytes32

new bytes64() noctx
	(), ()

# 128-byte type.
bytes128 record by-val extern
	.n0 bytes64
	.n1 bytes64

new bytes128() noctx
	(), ()

# 256-byte type
bytes256 record by-val extern
	.n0 bytes128
	.n1 bytes128

new bytes256() noctx
	(), ()

bytes512 record by-val extern
	.n0 bytes256
	.n1 bytes256

new bytes512() noctx
	(), ()

bytes1024 record by-val extern
	.n0 bytes512
	.n1 bytes512

new bytes1024() noctx
	(), ()

bytes2048 record by-val extern
	.n0 bytes1024
	.n1 bytes1024

new bytes2048() noctx
	(), ()

# Just ensuring that private fields are used...
test
	_ = ()::bytes2.n0
	_ = ()::bytes4.n0
	_ = ()::bytes8.n0
	_ = ()::bytes12.n0
	_ = ()::bytes12.n1
	_ = ()::bytes14.n0
	_ = ()::bytes14.n1
	_ = ()::bytes16.n0
	_ = ()::bytes16.n1
	_ = ()::bytes32.n0
	_ = ()::bytes32.n1
	_ = ()::bytes40.n0
	_ = ()::bytes40.n1
	_ = ()::bytes48.n0
	_ = ()::bytes48.n1
	_ = ()::bytes64.n0
	_ = ()::bytes64.n1
	_ = ()::bytes128.n0
	_ = ()::bytes128.n1
	_ = ()::bytes256.n0
	_ = ()::bytes256.n1
	_ = ()::bytes512.n0
	_ = ()::bytes512.n1
	_ = ()::bytes1024.n0
	_ = ()::bytes1024.n1
	_ = ()::bytes2048.n0
	_ = ()::bytes2048.n1
	()

no-std
import
	./bool: &&, bool
	./compare: compare, comparison, equal, greater, less
export
	./private/tuple-low-level: a, b, new, pair

###
Written `(a, b)`. Generic pair type.

This is often used as a key-value pair in a dictionary or priority queue.
###

+==[t, u] bool(a (t, u), b (t, u)) noctx, t equal, u equal
	a.a == b.a && a.b == b.b
+<=>[t, u] comparison(a (t, u), b (t, u)) noctx, t compare, u compare
	match a.a <=> b.a
	as less
		less
	as equal
		a.b <=> b.b
	as greater
		greater

# Same as `a.a`.
from[t, u] t(a (t, u)) noctx
	a a

# Same as `a.b`.
to[t, u] u(a (t, u)) noctx
	a b

+tuple3[t0, t1, t2] record by-val
	a t0
	b t1
	c t2

+tuple4[t0, t1, t2, t3] record by-val
	a t0
	b t1
	c t2
	d t3

+tuple5[t0, t1, t2, t3, t4] record by-val
	a t0
	b t1
	c t2
	d t3
	e t4

+tuple6[t0, t1, t2, t3, t4, t5] record by-val
	a t0
	b t1
	c t2
	d t3
	e t4
	f t5

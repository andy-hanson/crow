no-std
import
	../number: +, -, *, **, float32, float64, square-root
	../str: str
	../str-conv: finish, interp, to-str, with-str, with-value

###
2-dimensional vector.
Each element is a 64-bit float.
###
vec-2 record
	by-val
	x float64
	y float64

vec-2-32 record
	by-val
	x float32
	y float32

# Vector addition -- adds corresponding elements.
+ vec-2(a vec-2, b vec-2) noctx
	a.x + b.x, a.y + b.y

+ vec-2-32(a vec-2-32, b vec-2-32) noctx
	a.x + b.x, a.y + b.y

# Vector subtraction -- subtracts corresponding elements.
- vec-2(a vec-2, b vec-2) noctx
	a.x - b.x, a.y - b.y

- vec-2-32(a vec-2-32, b vec-2-32) noctx
	a.x - b.x, a.y - b.y

# Scales a vector by a scalar.
* vec-2(a vec-2, b float64) noctx
	a.x * b, a.y * b
* vec-2-32(a vec-2-32, b float32) noctx
	a.x * b, a.y * b

# Equivalent to `a.length ** 2` (but more efficient).
length-squared float64(a vec-2) noctx
	a.x ** 2 + a.y ** 2
length-squared float32(a vec-2-32) noctx
	a.x ** 2 + a.y ** 2

# Vector length, also known as the magnitude, norm, or |a|.
length float64(a vec-2) noctx
	a.length-squared square-root
length float32(a vec-2-32) noctx
	a.length-squared square-root

to-str str(a vec-2)
	"<{a x}, {a y}>"
to-str str(a vec-2-32)
	"<{a x}, {a y}>"

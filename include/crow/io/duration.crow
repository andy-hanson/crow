no-std
import
	../compare: >=
	../number: ==, <=>, *, /, float64
	../string: interpolate, show, string

# Represents an amount of time.
+duration record by-val
	-nanos float64

# 0 duration.
+new duration()
	0,

# Duration of `a` seconds.
+second duration(a float64)
	a * 1_000_000_000,

# Duration of `a` milliseconds.
+millisecond duration(a float64)
	a * 1000000,

# Duration of `a` microseconds.
+microsecond duration(a float64)
	a * 1000,

# Duration of `a` nanoseconds.
+nanosecond duration(a float64)
	a,

# Number of seconds in `a`.
+seconds float64(a duration)
	a.nanos / 1_000_000_000

# Number of milliseconds in `a`.
+milliseconds float64(a duration)
	# TODO:ROUND
	a.nanoseconds / 1_000_000

# Number of microseconds in `a`.
+microseconds float64(a duration)
	# TODO:ROUND
	a.nanoseconds / 1000

# Number of nanoseconds in `a`.
+nanoseconds float64(a duration)
	a nanos

# Tries to pick an appropriate format for the value, like `1.5s` or `2.3us`.
+show string(a duration)
	if a.nanos >= 1_000_000_000
		"{a seconds}s"
	elif a.nanos >= 1_000_000
		"{a milliseconds}ms"
	elif a.nanos >= 1_000
		"{a microseconds}us"
	else
		"{a nanoseconds}ns"

no-std
import
	../compare: >=
	../number: ==, <=>, *, /, float64
	../string: ~~, literal, string, to-string

# Represents an amount of time.
+duration record by-val
	-nanos float64

# 0 duration.
+new duration()
	0,

# Duration of `a` seconds.
+sec duration(a float64)
	a * 1_000_000_000,

# Duration of `a` milliseconds.
+msec duration(a float64)
	a * 1000000,

# Duration of `a` microseconds.
+usec duration(a float64)
	a * 1000,

# Duration of `a` nanoseconds.
+nsec duration(a float64)
	a,

# Number of seconds in `a`.
+seconds float64(a duration)
	a.nanos / 1_000_000_000

# Number of milliseconds in `a`.
+msec float64(a duration)
	# TODO:ROUND
	a.nsec / 1_000_000

# Number of microseconds in `a`.
+usec float64(a duration)
	# TODO:ROUND
	a.nsec / 1000

# Number of nanoseconds in `a`.
+nsec float64(a duration)
	a nanos

# Tries to pick an appropriate format for the value, like `1.5s` or `2.3us`.
+to-string string(a duration)
	if a.nanos >= 1_000_000_000
		"{a seconds}s"
	elif a.nanos >= 1_000_000
		"{a msec}ms"
	elif a.nanos >= 1_000
		"{a usec}us"
	else
		"{a nsec}ns"

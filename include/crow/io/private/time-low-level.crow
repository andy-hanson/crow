no-std
import
	time: clock_gettime, CLOCK_MONOTONIC, new, timespec, tv_nsec, tv_sec
	win32: GetTickCount
	../../number: ==, +, *, /, %, int64, to
	../../private/bootstrap: nat64, todo
	../../version: is-windows

# Monotime in nanoseconds.
timestamp alias
	nat64

###
Get the value from a monotonic clock.
WARN: This should be 'summon', but I didn't mark it that way so 'perf' can use it.
###
get-monotime-nsec timestamp() bare
	trusted if is-windows
		GetTickCount.to msec-to-nsec
	else
		time mut timespec = ()
		err = CLOCK_MONOTONIC clock_gettime &time
		if err == 0
			time.tv_sec.to * 1000000000 + time.tv_nsec.to
		else
			todo

-msec-to-nsec nat64(a nat64) bare
	a * 1000000

nsec-to-msec nat64(a nat64) bare
	a / 1000000

to-timespec timespec(a timestamp) bare, unsafe
	second = 1000000000
	seconds int64 = a / second to
	ns int64 = a % second to
	seconds, ns

no-std
import
	unistd: __environ
	../col/dict: ~=, build, dict, with-block
	../private/bootstrap: todo
	../private/c-string-util: find-char-in-c-string, find-c-string-end
	../pointer: ==, <=>, +, *, const-pointer, null
	../range: ..
	../string: ==, <=>, as-string, c-string, hash-mix, string
	../tuple: new, pair

# Represents the environment variables available to this process.
environ alias
	string[string]

get-environ-raw c-string*() summon, unsafe
	__environ

# Get all environment variables for this process.
get-environ environ() summon
	with out : build
		trusted
			env mut = get-environ-raw
			until *env == null
				out ~= env->parse-environ-entry
				env := env + 1

.parse-environ-entry (string, string)(entry c-string) unsafe
	if key-end ?= entry find-char-in-c-string "="
		key = entry .. key-end as-string
		value-begin = key-end + 1
		value-end = value-begin find-c-string-end
		value = value-begin .. value-end as-string
		key, value
	else
		todo

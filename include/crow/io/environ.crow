no-std
import
	unistd: __environ
	../col/dict: dict
	../col/mut-dict: move-to-dict, mut-dict, new, set-subscript
	../col/list: to-list
	../col/private/array-low-level: array-from-begin-end
	../misc: new, void
	../private/bootstrap: todo
	../private/c-str-util: find-char-in-c-str, find-c-str-end
	../ptr: ==, +, *, const-ptr, null
	../str: ==, <=>, c-str, hash-mix, str
	../tuple: from, new, pair, to

# Represents the environment variables available to this process.
environ alias
	str[str]

get-environ-raw c-str*() summon unsafe
	__environ

# Get all environment variables for this process.
get-environ environ() summon trusted
	res str mut[str] = ()
	get-environ-raw get-environ-recur res
	res move-to-dict

.get-environ-recur void(env c-str*, res str mut[str]) unsafe
	unless *env == null
		entry = env->parse-environ-entry
		res[entry from] := entry to
		env + 1 get-environ-recur res

.parse-environ-entry pair<str, str>(entry c-str) unsafe
	if key-end ?= entry find-char-in-c-str "="
		key = (entry array-from-begin-end key-end).to-list str
		value-begin = key-end + 1
		value-end = value-begin find-c-str-end
		value = (value-begin array-from-begin-end value-end).to-list str
		key, value
	else
		todo

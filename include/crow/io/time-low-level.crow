no-std
import
	time: clock_gettime, CLOCK_MONOTONIC, timespec, tv-nsec, tv-sec
	../cell: *, cell
	../ptr: by-val, ref-of-val
	../private/bootstrap: nat64, todo
	../private/number-low-level:
		==, unsafe-div, unsafe-mod, unsafe-to-int64, unsafe-to-nat64, wrap-add, wrap-mul

# Monotime in nanoseconds.
timestamp alias
	nat64

# Get the value from a monotonic clock.
# TODO: SUMMON
get-monotime-nsec timestamp() noctx trusted
	time-cell by-val<cell<timespec>> = 0 timespec 0 cell
	err = CLOCK_MONOTONIC clock_gettime time-cell.ref-of-val
	if err == 0
		time = *time-cell.ref-of-val
		time.tv-sec wrap-mul 1000000000 wrap-add time.tv-nsec unsafe-to-nat64
	else
		todo

to-timespec timespec(a timestamp) noctx unsafe
	second = 1000000000
	seconds = a unsafe-div second unsafe-to-int64
	ns = a unsafe-mod second unsafe-to-int64
	seconds timespec ns

no-std
import
	./ptr: as-any-ptr, as-ref, ptr, ptr-cast

###
Mutable reference to a single value.
Example:
```
c = cell<nat>: 1
c[] is 1
c[] := c[] + 1
c[] is 2
```
###
cell<?a> record mut
	subscript mut ?a

###
Treats a pointer as a cell.
UB if the pointer does not point to a mutable value.
###
as-cell cell ?a(a ptr ?a) noctx unsafe
	a.as-any-ptr as-ref

as-ptr ptr ?a(a cell ?a) noctx unsafe
	a.as-any-ptr ptr-cast

# Put `v` into the cell, and return the old value.
swap ?a(c cell ?a, v ?a) noctx
	res = c[]
	c[] := v
	res

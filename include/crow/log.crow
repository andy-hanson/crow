no-std
import
	./fun-util: subscript
	./misc: void
	./str: str
	./private/exception-low-level: catch, throw
	./private/log-low-level: set-log-handler
export
	./private/log-low-level:
		error, get-log-handler, info, logged, log-handler, log-level, new, to-str, warn

###
Sends a log to the current log handler.
By default, this means the message is logged to the console.

This is not considered `summon` since the I/O is done by the log handler,
which is passed in via the crow context. `with-log-handler` can change it.
###
log void(level log-level, message str) trusted
	get-log-handler[(level, message)]

###
Temporarily replaces the log handler.

Only applies within this task. Even if you launch a task inside `with-log-handler`,
that task will still have the default log handler.
###
with-log-handler<a> a(handler log-handler, cb act a())
	original-handler = get-log-handler
	action act a() = () =>
		log-handler := handler
		res = cb[]
		log-handler := original-handler
		res
	action catch err =>
		log-handler := original-handler
		err throw

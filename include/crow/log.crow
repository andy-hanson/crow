no-std
import
	./fun: subscript
	./misc: as, void
	./str: str
	./private/exception-low-level: catch, throw
	./private/log-low-level: set-log-handler
export
	./private/log-low-level:
		error, get-log-handler, info, logged, log-handler, log-level, to-str, warn

###
Sends a log to the current log handler.
###
log void(level log-level, message str) trusted
	get-log-handler[level logged message]

###
Temporarily replaces the log handler for this task.
(Does not affect other tasks.)
###
with-log-handler ?a(handler log-handler, cb act ?a())
	original-handler = get-log-handler
	action = as<act ?a()>: () =>
		log-handler := handler
		res = cb[]
		log-handler := original-handler
		res
	action catch err =>
		log-handler := original-handler
		err throw

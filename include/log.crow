no-std
import
	.exception: finally
	.fun: subscript
	.misc: as, void
	.str: str
	.private.log-low-level: set-log-handler
export
	.private.log-low-level: get-log-handler, info, logged, log-handler, log-level, to-str, warn

###
Sends a log to the current log handler.
###
log void(level log-level, message str) trusted
	get-log-handler[level logged message]

###
Temporarily replaces the log handler for this task.
(Does not affect other tasks.)
###
with-log-handler ?a(handler log-handler, cb act ?a())
	original-handler = get-log-handler
	reset = as<act void()>: \
		log-handler := original-handler
	finally: reset, \
		log-handler := handler
		cb[]

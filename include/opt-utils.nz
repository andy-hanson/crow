import
	.bootstrap: call fun-mut0 fun-mut1 fun-mut2 none opt some value
	.exceptions: fail

opt-join opt ?out(a opt ?a, b opt ?b, cb fun-mut2<?out, ?a, ?b>)
	match a
	as none
		none
	as some some-a
		match b
		as none
			none
		as some some-b
			some: cb call some-a.value, some-b.value

opt-map opt ?out(a opt ?in, cb fun-mut1<?out, ?in>)
	match a
	as none
		none
	as some s
		cb call s.value some

opt-or ?t(a opt ?t, default fun-mut0 ?t)
	match a
	as none
		default call
	as some s
		s value

force ?t(a opt ?t)
	match a
	as none
		fail: "tried to force empty option"
	as some s
		s value

then opt ?out(a opt ?in, f fun-mut1<opt ?out, ?in>)
	match a
	as none
		none
	as some s
		f call s.value

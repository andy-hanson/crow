import
	.bootstrap: bool by-val empty? none opt some void

| NOTE: currently this is a linked list, but we actually want to pseudorandomly take out nodes.

mut-bag-node<?t> record mut
	value ?t
	next-node mut opt mut-bag-node<?t>

| Expose construction of nodes, because it's better to do this outside of a lock
new-mut-bag-node mut-bag-node ?t(value ?t)
	mut-bag-node: value, none

mut-bag<?t> record mut
	head mut opt mut-bag-node<?t>

new-mut-bag by-val mut-bag<?t>() noctx
	| TODO: should be able to infer type arguments 
	mut-bag<?t>: none

add void(bag mut-bag ?t, node mut-bag-node ?t) noctx
	| TODO: insert randomly somewhere
	node set-next-node bag.head
	bag set-head: node some

empty? bool(m mut-bag ?t) noctx
	m.head empty?

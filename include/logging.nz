import
	.bootstrap: as-ref by-val call get-ctx log-ctx str void zeroed
	.collection.arr: +
	.exceptions: finally
	.io.print: print

log-ctx record mut
	by-ref
	handler mut log-handler

new-log-ctx by-val log-ctx() noctx unsafe
	| Handler is set in 'new-ctx'
	log-ctx: zeroed

log-handler alias
	fun void(logged)

default-log-handler void(a logged) summon
	print: a.level.to-str + ": " + a.message

info record
warn record

log-level union
	info
	warn

.to-str str(a log-level)
	match a
	as info
		"info"
	as warn
		"warn"

logged record
	level log-level
	message str

log void(level log-level, message str) trusted
	get-log-handler call: logged: level, message

get-log-handler log-handler()
	get-log-ctx.handler

.set-log-handler void(handler log-handler) trusted
	get-log-ctx set-handler handler

.get-log-ctx log-ctx() trusted
	get-ctx.log-ctx.as-ref<log-ctx>

with-log-handler ?t(handler log-handler, cb act ?t())
	original-handler = get-log-handler
	finally: {original-handler set-log-handler}, \
		handler set-log-handler
		cb call

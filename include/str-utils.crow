import
	.bool: and
	.bootstrap: arr, char, c-str, data, nat8, size, str, todo
	.collection.arr: ~, arr-from-begin-end, has?
	.collection.arr-util: first, tail
	.compare: ==
	.ptr: +, ptr-cast, subscript

as-str str(bytes arr nat8) unsafe noctx
	arr: bytes.size, bytes.data ptr-cast<char, nat8>

to-c-str c-str(a str)
	a ~ "\0" data

to-str str(a c-str) unsafe noctx
	a arr-from-begin-end a.find-cstr-end

find-char-in-cstr c-str(a c-str, c char) unsafe noctx
	if a[] == c
		a
	elif a[] == "\0"
		# Did not find the char
		todo
	else
		a + 1 find-char-in-cstr c

find-cstr-end c-str(a c-str) unsafe noctx
	a find-char-in-cstr "\0"

lstrip str(a str)
	if a.has? and: a.first == " "
		a.tail lstrip
	else
		a

no-std
import
	..private.bootstrap: as, nat, todo
	..private.number-low-level:
		unsafe-div, unsafe-mod, unsafe-to-int, unsafe-to-nat, wrap-add, wrap-mul
	..cell: cell, subscript
	..compare: ==
	..posix.time: clock-gettime, clock-monotonic, timespec, tv-nsec, tv-sec
	..ptr: by-val, ref-of-val

# Monotime in nanoseconds.
timestamp alias
	nat

# Get the value from a monotonic clock.
# TODO: SUMMON
get-monotime-nsec timestamp() noctx trusted
	time-cell = as<by-val<cell<timespec>>>: cell: timespec: 0, 0
	err = clock-monotonic clock-gettime time-cell.ref-of-val
	if err == 0
		time = time-cell.ref-of-val[]
		time.tv-sec wrap-mul 1000000000 wrap-add time.tv-nsec unsafe-to-nat
	else
		todo

to-timespec timespec(a timestamp) noctx unsafe
	second = 1000000000
	seconds = a unsafe-div second unsafe-to-int
	ns = a unsafe-mod second unsafe-to-int
	timespec: seconds, ns

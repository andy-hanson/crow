no-std
import
	..col.arr: ==, size, subscript
	..col.arr-util: last, r-index-of, rtail
	..misc: ->
	..number: +, -, nat
	..opt: none, opt, some
	..str: char, str
	..str-conv: finish, interp, to-str, with-str, with-value

###
Gets the paremt of a path.
Returns "" if the path has no parent.
###
parent-path str(a str)
	if index ?= a r-index-of "/"
		a[0 -> index]
	else
		""

# Gets a child of a path.
child-path str(a str, child-name str)
	"{a}/{child-name}"

# TODO:MOVE
.last-index-of opt nat(a str, c char)
	if last-char ?= a last
		if last-char == c
			a.size - 1 some
		else
			a.rtail last-index-of c
	else
		none

# Gets the extension from a file name or path.
# Returns none if there is no extension.
get-extension opt str(name str)
	if index ?= name last-index-of "."
		name[index + 1 -> name.size] some
	else
		none

# Removes the extension from a file name or path.
remove-extension str(name str)
	if index ?= name last-index-of "."
		name[0 -> index]
	else
		name

###
Adds an extension to a file name or path.
If an extension already exists, adds a second one, as in `foo.png.txt`.
###
add-extension str(name str, ext str)
	"{name}.{ext}"

# Removes the extension (if it exists) and adds a new one.
change-extension str(name str, ext str)
	name.remove-extension add-extension ext

# Gets just the file name without any directory names in from of it.
base-name str(path str)
	if index ?= path last-index-of "/"
		path[index + 1 -> path.size]
	else
		path

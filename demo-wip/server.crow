import
	col.arr-util: flatten
	col.dict: dict, map-to-arr
	io.net.http-server:
		body, headers, http-handler, http-request, http-response, method, start-http-server,
		to-str, url
	io.print: print

main fut nat(args arr str) unsafe summon
	if args.size != 1
		print: "Usage: server PORT"
		1 resolved
	else
		port = args[0]
		handler = as<http-handler>: req =>
			descr = req describe-request
			print: descr
			resolved: http-response: 200, "OK", dict, "Your request:\n{descr}"
		server = port start-http-server handler
		drop: server
		0 resolved

.describe-request str(a http-request)
	h = a.headers map-to-arr (k, v) => "{k}: {v}"
	"{a method} {a url}\n{h flatten "\n"}\n\n{a body}"

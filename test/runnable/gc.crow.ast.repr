file-ast(
	imports: ports(
		range(0, 199)
		[
			import-ast(
				0
				"/crow/private/alloc"
				some([
					cur-word
					gc-count
					gc-stats
					get-gc
					get-stats
					force-needs-gc
					set-hard-limit
					words-free
					words-used]))
			import-ast(0, "/crow/io/print", some([print]))
			import-ast(0, "/crow/ptr", some([-, as-any-ptr, by-val, size-of]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(776, 807)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(786, 791), false, a, inststruct(range(788, 791), name-range(788, nat)))
					field(range(793, 798), false, b, inststruct(range(795, 798), name-range(795, nat)))
					field(range(800, 805), false, c, inststruct(range(802, 805), name-range(802, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(199, 222)
				main
				inststruct(range(204, 211), name-range(204, fut), [inststruct(range(208, 211), name-range(208, nat))])
				[
					param(
						range(212, 221)
						none
						inststruct(range(214, 221), name-range(214, arr), [inststruct(range(218, 221), name-range(218, str))]))])
			summon: true
			unsafe: true
			body: let(
				name-range(238, gc)
				get-gc
				seq-ast(
					call(set-dot, name-range(283, set-hard-limit), [], [gc, literal(nat(512, false))])
					let(
						name-range(339, a)
						call(
							prefix
							name-range(343, r)
							[]
							[literal(nat(1, false)), literal(nat(2, false)), literal(nat(3, false))])
						let(
							name-range(355, b)
							call(
								prefix
								name-range(359, r)
								[]
								[literal(nat(4, false)), literal(nat(5, false)), literal(nat(6, false))])
							seq-ast(
								seq-ast(
									seq-ast(
										seq-ast(
											seq-ast(
												seq-ast(
													seq-ast(
														call(
															prefix
															name-range(371, assert)
															[]
															[
																call(
																	infix
																	name-range(398, ==)
																	[]
																	[
																		call(
																			single
																			name-range(379, size-of)
																			[
																				inststruct(
																					range(387, 396)
																					name-range(387, by-val)
																					[
																						inststruct(
																							range(394, 395)
																							name-range(394, r))])]
																			[])
																		literal(nat(24, false))])])
														call(
															prefix
															name-range(405, assert)
															[]
															[
																call(
																	infix
																	name-range(441, ==)
																	[]
																	[
																		call(
																			infix
																			name-range(426, -)
																			[]
																			[
																				call(
																					dot
																					name-range(415, as-any-ptr)
																					[]
																					[b])
																				call(
																					dot
																					name-range(430, as-any-ptr)
																					[]
																					[a])])
																		literal(nat(24, false))])]))
													call(
														prefix
														name-range(449, print)
														[]
														[
															interpolated(
																[
																	"stats: "
																	call(infix, name-range(468, get-stats), [], [gc])])]))
												call(
													prefix
													name-range(481, print)
													[]
													[
														interpolated(
															[
																"gc count: "
																call(infix, name-range(503, gc-count), [], [gc])])]))
											call(prefix, name-range(515, print), [], [interpolated(["a: ", a])]))
										call(
											prefix
											name-range(532, print)
											[]
											[
												interpolated(
													[
														"stats (after print): "
														call(infix, name-range(565, get-stats), [], [gc])])]))
									call(infix, name-range(582, force-needs-gc), [], [gc]))
								then-void(
									delay
									seq-ast(
										seq-ast(
											seq-ast(
												seq-ast(
													seq-ast(
														call(
															prefix
															name-range(609, print)
															[]
															[literal("-- after gc --")])
														call(
															prefix
															name-range(634, print)
															[]
															[
																interpolated(
																	[
																		"stats: "
																		call(infix, name-range(653, get-stats), [], [gc])])]))
													call(
														prefix
														name-range(666, print)
														[]
														[
															interpolated(
																[
																	"gc count: "
																	call(infix, name-range(688, gc-count), [], [gc])])]))
												call(prefix, name-range(700, print), [], [interpolated(["a: ", a])]))
											call(
												prefix
												name-range(717, print)
												[]
												[
													interpolated(
														[
															"stats (after print): "
															call(infix, name-range(750, get-stats), [], [gc])])]))
										call(infix, name-range(766, resolved), [], [literal(nat(0, false))])))))))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(807, 822)
				to-str
				inststruct(range(814, 817), name-range(814, str))
				[param(range(818, 821), some(a), inststruct(range(820, 821), name-range(820, r)))])
			body: interpolated(
				[
					"a="
					call(infix, name-range(830, a), [], [a])
					", b="
					call(infix, name-range(839, b), [], [a])
					", c="
					call(infix, name-range(848, c), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(853, 875)
				to-str
				inststruct(range(860, 863), name-range(860, str))
				[param(range(864, 874), some(a), inststruct(range(866, 874), name-range(866, gc-stats)))])
			summon: true
			body: interpolated(
				[
					"cur-word="
					call(infix, name-range(897, cur-word), [], [a])
					", words-used="
					call(infix, name-range(922, words-used), [], [a])
					", words-free="
					call(infix, name-range(949, words-free), [], [a])]))])

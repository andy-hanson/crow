import
	crow/io/print: print
	crow/private/alloc:
		cur-word, gc-count, gc-stats, get-gc, get-stats, force-needs-gc!, set-hard-limit, words-free, words-used
	crow/ptr: -, as-any-const-ptr, by-val, size-of

main fut nat(_ str[]) summon unsafe
	gc = get-gc
	# To speed up 'gc.get-stats'
	gc.hard-limit := 0x200

	# We'll keep a alive, but not b
	a = r: 1, 2, 3
	b = r: 4, 5, 6
	assert: size-of<by-val<r>> == 24
	assert: b.as-any-const-ptr - a.as-any-const-ptr == 24

	print: "stats: {gc get-stats}"
	print: "gc count: {gc gc-count}"
	print: "a: {a}"
	print: "stats (after print): {gc get-stats}"

	gc force-needs-gc!
	<- delay

	print: "-- after gc --"
	print: "stats: {gc get-stats}"
	print: "gc count: {gc gc-count}"
	print: "a: {a}"
	print: "stats (after print): {gc get-stats}"

	0 resolved

r record
	a nat
	b nat
	c nat

to-str str(a r)
	"a={a a}, b={a b}, c={a c}"

to-str str(a gc-stats) summon
	"cur-word={a cur-word}, words-used={a words-used}, words-free={a words-free}"

file-ast(
	imports: ports(range(0, 34), [import-ast(0, "/io", some([exit-code, print-sync]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(34, 66)
			true
			[]
			none
			record(
				none
				[
					field(range(52, 57), false, x, inststruct(range(54, 57), name-range(54, nat)))
					field(range(59, 64), false, y, inststruct(range(61, 64), name-range(61, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(66, 98)
				main
				inststruct(range(71, 84), name-range(71, fut), [inststruct(range(75, 84), name-range(75, exit-code))])
				[
					param(
						range(85, 97)
						name-range(85, args)
						inststruct(range(90, 97), name-range(90, arr), [inststruct(range(94, 97), name-range(94, str))]))])
			summon: true
			body: let(
				name-range(107, m)
				new-record(
					some(inststruct(range(115, 124), name-range(115, my-record)))
					[literal(numeric, "1"), literal(numeric, "2")])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(132, assert)
									[]
									[
										call(
											infix
											name-range(144, ==)
											[]
											[call(dot, name-range(142, x), [], [m]), literal(numeric, "1")])])
								call(
									prefix
									name-range(150, assert)
									[]
									[
										call(
											infix
											name-range(162, ==)
											[]
											[call(dot, name-range(160, y), [], [m]), literal(numeric, "2")])]))
							call(
								prefix
								name-range(168, print-sync)
								[]
								[call(dot, name-range(184, to-str), [], [call(dot, name-range(182, x), [], [m])])]))
						call(
							prefix
							name-range(192, print-sync)
							[]
							[call(dot, name-range(208, to-str), [], [call(dot, name-range(206, y), [], [m])])]))
					call(prefix, name-range(216, resolved), [], [literal(numeric, "0")]))))])

file-ast(
	imports: ports(range(0, 29), [import-ast(0, "/io", some([exit-code, print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(175, 206)
			true
			[]
			none
			record(
				none
				[
					field(range(193, 198), false, x, inststruct(range(195, 198), name-range(195, nat)))
					field(range(200, 205), false, y, inststruct(range(202, 205), name-range(202, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(29, 58)
				main
				inststruct(range(34, 47), name-range(34, fut), [inststruct(range(38, 47), name-range(38, exit-code))])
				[
					param(
						range(48, 57)
						none
						inststruct(range(50, 57), name-range(50, arr), [inststruct(range(54, 57), name-range(54, str))]))])
			summon: true
			body: let(
				name-range(67, m)
				call(prefix, name-range(71, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(88, assert)
									[]
									[
										call(
											infix
											name-range(100, ==)
											[]
											[call(dot, name-range(98, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(106, assert)
									[]
									[
										call(
											infix
											name-range(118, ==)
											[]
											[call(dot, name-range(116, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(124, print)
								[]
								[call(dot, name-range(135, to-str), [], [call(dot, name-range(133, x), [], [m])])]))
						call(
							prefix
							name-range(143, print)
							[]
							[call(dot, name-range(154, to-str), [], [call(dot, name-range(152, y), [], [m])])]))
					call(prefix, name-range(162, resolved), [], [literal(nat(0, false))]))))])

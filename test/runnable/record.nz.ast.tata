file-ast(
	imports: ports(range(0, 10), [import-ast(0, "/io")])
	specs: []
	aliases: []
	structs: [
		struct(
			range(11, 43)
			true
			[]
			none
			record(
				none
				[
					field(range(29, 34), false, x, inststruct(range(31, 34), name-range(31, nat)))
					field(range(36, 41), false, y, inststruct(range(38, 41), name-range(38, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(43, 75)
				main
				inststruct(range(48, 61), name-range(48, fut), [inststruct(range(52, 61), name-range(52, exit-code))])
				[
					param(
						range(62, 74)
						name-range(62, args)
						inststruct(range(67, 74), name-range(67, arr), [inststruct(range(71, 74), name-range(71, str))]))])
			summon: true
			body: let(
				name-range(84, m)
				new-record(
					some(inststruct(range(92, 101), name-range(92, my-record)))
					[literal(numeric, "1"), literal(numeric, "2")])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(109, assert)
									[]
									[
										call(
											infix
											name-range(121, ==)
											[]
											[call(dot, name-range(119, x), [], [m]), literal(numeric, "1")])])
								call(
									prefix
									name-range(127, assert)
									[]
									[
										call(
											infix
											name-range(139, ==)
											[]
											[call(dot, name-range(137, y), [], [m]), literal(numeric, "2")])]))
							call(
								prefix
								name-range(145, print-sync)
								[]
								[call(dot, name-range(161, to-str), [], [call(dot, name-range(159, x), [], [m])])]))
						call(
							prefix
							name-range(169, print-sync)
							[]
							[call(dot, name-range(185, to-str), [], [call(dot, name-range(183, y), [], [m])])]))
					call(prefix, name-range(193, resolved), [], [literal(numeric, "0")]))))])

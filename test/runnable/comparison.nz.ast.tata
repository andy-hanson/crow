file-ast(
	imports: ports(range(0, 29), [import-ast(0, "/io", some([exit-code, print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(151, 183)
			true
			[]
			none
			record(
				none
				[
					field(range(169, 174), false, x, inststruct(range(171, 174), name-range(171, nat)))
					field(range(176, 181), false, y, inststruct(range(178, 181), name-range(178, nat)))]))
		struct(
			range(183, 229)
			true
			[]
			none
			record(
				some(by-val-ref(207, by-ref))
				[
					field(range(215, 220), false, x, inststruct(range(217, 220), name-range(217, nat)))
					field(range(222, 227), false, y, inststruct(range(224, 227), name-range(224, nat)))]))
		struct(range(229, 253), true, [], none, record(none, []))
		struct(
			range(253, 297)
			true
			[]
			none
			union(
				[inststruct(range(269, 278), name-range(269, my-record)), inststruct(range(280, 295), name-range(280, my-other-record))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(29, 58)
				main
				inststruct(range(34, 47), name-range(34, fut), [inststruct(range(38, 47), name-range(38, exit-code))])
				[
					param(
						range(48, 57)
						none
						inststruct(range(50, 57), name-range(50, arr), [inststruct(range(54, 57), name-range(54, str))]))])
			summon: true
			body: seq-ast(
				seq-ast(seq-ast(test-compare-records, test-compare-byref-records), test-compare-unions)
				call(prefix, name-range(138, resolved), [], [literal(nat(0, false))])))
		fun-decl(
			public?: true
			sig: sig-ast(range(297, 324), test-compare-records, inststruct(range(318, 322), name-range(318, void)), [])
			summon: true
			body: let(
				name-range(333, a)
				call(prefix, name-range(337, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(354, b)
					call(prefix, name-range(358, my-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(375, c)
						call(prefix, name-range(379, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(396, d)
							call(prefix, name-range(400, my-record), [], [literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(417, print)
										[]
										[
											call(
												infix
												name-range(432, to-str)
												[]
												[call(infix, name-range(426, <=>), [], [a, b])])])
									call(
										prefix
										name-range(440, print)
										[]
										[
											call(
												infix
												name-range(455, to-str)
												[]
												[call(infix, name-range(449, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(463, print)
									[]
									[
										call(
											infix
											name-range(478, to-str)
											[]
											[call(infix, name-range(472, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(486, 519), test-compare-byref-records, inststruct(range(513, 517), name-range(513, void)), [])
			summon: true
			body: let(
				name-range(528, a)
				call(prefix, name-range(532, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(555, b)
					call(prefix, name-range(559, my-byref-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(582, c)
						call(prefix, name-range(586, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(609, d)
							call(
								prefix
								name-range(613, my-byref-record)
								[]
								[literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(636, print)
										[]
										[
											call(
												infix
												name-range(651, to-str)
												[]
												[call(infix, name-range(645, <=>), [], [a, b])])])
									call(
										prefix
										name-range(659, print)
										[]
										[
											call(
												infix
												name-range(674, to-str)
												[]
												[call(infix, name-range(668, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(682, print)
									[]
									[
										call(
											infix
											name-range(697, to-str)
											[]
											[call(infix, name-range(691, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(705, 731), test-compare-unions, inststruct(range(725, 729), name-range(725, void)), [])
			summon: true
			body: let(
				name-range(740, a)
				call(
					prefix
					name-range(744, as)
					[inststruct(range(747, 755), name-range(747, my-union))]
					[call(prefix, name-range(758, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
				let(
					name-range(775, b)
					call(prefix, name-range(779, as), [inststruct(range(782, 790), name-range(782, my-union))], [my-other-record])
					let(
						name-range(810, c)
						call(
							prefix
							name-range(814, as)
							[inststruct(range(817, 825), name-range(817, my-union))]
							[call(prefix, name-range(828, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
						let(
							name-range(845, d)
							call(
								prefix
								name-range(849, as)
								[inststruct(range(852, 860), name-range(852, my-union))]
								[
									call(
										prefix
										name-range(863, my-record)
										[]
										[literal(nat(1, false)), literal(nat(1, false))])])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(881, print)
										[]
										[
											call(
												infix
												name-range(896, to-str)
												[]
												[call(infix, name-range(890, <=>), [], [a, b])])])
									call(
										prefix
										name-range(904, print)
										[]
										[
											call(
												infix
												name-range(919, to-str)
												[]
												[call(infix, name-range(913, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(927, print)
									[]
									[
										call(
											infix
											name-range(942, to-str)
											[]
											[call(infix, name-range(936, <=>), [], [a, d])])])))))))])

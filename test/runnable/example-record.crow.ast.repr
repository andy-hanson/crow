file-ast(
	imports: ports(range(0, 48), [import-ast(0, "/io/print", some([print])), import-ast(0, "/io/process", some([exit-code]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(48, 88)
			true
			[]
			none
			record(
				none
				[
					field(range(61, 72), false, width, inststruct(range(67, 72), name-range(67, float)))
					field(range(74, 86), false, height, inststruct(range(81, 86), name-range(81, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(88, 106)
				area
				inststruct(range(93, 98), name-range(93, float))
				[param(range(99, 105), some(a), inststruct(range(101, 105), name-range(101, rect)))])
			body: call(
				infix
				name-range(116, *)
				[]
				[call(dot, name-range(110, width), [], [a]), call(dot, name-range(120, height), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(128, 157)
				main
				inststruct(range(133, 146), name-range(133, fut), [inststruct(range(137, 146), name-range(137, exit-code))])
				[
					param(
						range(147, 156)
						none
						inststruct(range(149, 156), name-range(149, arr), [inststruct(range(153, 156), name-range(153, str))]))])
			summon: true
			body: let(
				name-range(166, r)
				call(
					prefix
					name-range(170, rect)
					[]
					[
						literal(
							float(
								1.5
								false))
						literal(
							float(
								2.5
								false))])
				seq-ast(
					call(
						prefix
						name-range(186, print)
						[]
						[call(infix, name-range(200, to-str), [], [call(dot, name-range(195, area), [], [r])])])
					call(infix, name-range(210, resolved), [], [literal(nat(0, false))]))))])

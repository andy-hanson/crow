file-ast(
	imports: ports(range(0, 30), [import-ast("/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(30, 70)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(43, 54), false, width, inststruct(range(49, 54), name-range(49, float)))
					field(range(56, 68), false, height, inststruct(range(63, 68), name-range(63, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(70, 88)
				area
				inststruct(range(75, 80), name-range(75, float))
				[param(range(81, 87), some(a), inststruct(range(83, 87), name-range(83, rect)))])
			body: call(
				infix
				name-range(98, *)
				[]
				[call(dot, name-range(92, width), [], [a]), call(dot, name-range(102, height), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(110, 133)
				main
				inststruct(range(115, 122), name-range(115, fut), [inststruct(range(119, 122), name-range(119, nat))])
				[
					param(
						range(123, 132)
						none
						inststruct(range(125, 132), name-range(125, arr), [inststruct(range(129, 132), name-range(129, str))]))])
			summon: true
			body: let(
				name-range(142, r)
				call(
					prefix
					name-range(146, rect)
					[]
					[
						literal(
							float(
								1.5
								false))
						literal(
							float(
								2.5
								false))])
				seq-ast(
					call(
						prefix
						name-range(162, print)
						[]
						[call(infix, name-range(176, to-str), [], [call(dot, name-range(171, area), [], [r])])])
					call(infix, name-range(186, resolved), [], [literal(nat(0, false))]))))])

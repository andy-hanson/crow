file-ast(
	imports: ports(range(0, 36), [import-ast(0, "/io/print", some([print])), import-ast(0, "/number", some([*]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(36, 76)
			true
			[]
			none
			record(
				none
				[
					field(range(49, 60), false, width, inststruct(range(55, 60), name-range(55, float)))
					field(range(62, 74), false, height, inststruct(range(69, 74), name-range(69, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(76, 94)
				area
				inststruct(range(81, 86), name-range(81, float))
				[param(range(87, 93), some(a), inststruct(range(89, 93), name-range(89, rect)))])
			body: call(
				infix
				name-range(104, *)
				[]
				[call(dot, name-range(98, width), [], [a]), call(dot, name-range(108, height), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(116, 139)
				main
				inststruct(range(121, 128), name-range(121, fut), [inststruct(range(125, 128), name-range(125, nat))])
				[
					param(
						range(129, 138)
						none
						inststruct(range(131, 138), name-range(131, arr), [inststruct(range(135, 138), name-range(135, str))]))])
			summon: true
			body: let(
				name-range(148, r)
				call(
					prefix
					name-range(152, rect)
					[]
					[
						literal(
							float(
								1.5
								false))
						literal(
							float(
								2.5
								false))])
				seq-ast(
					call(
						prefix
						name-range(168, print)
						[]
						[call(infix, name-range(182, to-str), [], [call(dot, name-range(177, area), [], [r])])])
					call(infix, name-range(192, resolved), [], [literal(nat(0, false))]))))])

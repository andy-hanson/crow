file-ast(
	imports: ports(range(0, 25), [import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(25, 65)
			true
			[]
			none
			record(
				none
				[
					field(range(38, 49), false, width, inststruct(range(44, 49), name-range(44, float)))
					field(range(51, 63), false, height, inststruct(range(58, 63), name-range(58, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(65, 83)
				area
				inststruct(range(70, 75), name-range(70, float))
				[param(range(76, 82), some(a), inststruct(range(78, 82), name-range(78, rect)))])
			body: call(
				infix
				name-range(93, *)
				[]
				[call(dot, name-range(87, width), [], [a]), call(dot, name-range(97, height), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(105, 128)
				main
				inststruct(range(110, 117), name-range(110, fut), [inststruct(range(114, 117), name-range(114, nat))])
				[
					param(
						range(118, 127)
						none
						inststruct(range(120, 127), name-range(120, arr), [inststruct(range(124, 127), name-range(124, str))]))])
			summon: true
			body: let(
				name-range(137, r)
				call(
					prefix
					name-range(141, rect)
					[]
					[
						literal(
							float(
								1.5
								false))
						literal(
							float(
								2.5
								false))])
				seq-ast(
					call(
						prefix
						name-range(157, print)
						[]
						[call(infix, name-range(171, to-str), [], [call(dot, name-range(166, area), [], [r])])])
					call(infix, name-range(181, resolved), [], [literal(nat(0, false))]))))])

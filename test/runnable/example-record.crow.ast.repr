file-ast(
	imports: ports(range(0, 46), [import-ast(0, "/bootstrap", some([fut, str])), import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(46, 86)
			true
			[]
			none
			record(
				none
				[
					field(range(59, 70), false, width, inststruct(range(65, 70), name-range(65, float)))
					field(range(72, 84), false, height, inststruct(range(79, 84), name-range(79, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(86, 104)
				area
				inststruct(range(91, 96), name-range(91, float))
				[param(range(97, 103), some(a), inststruct(range(99, 103), name-range(99, rect)))])
			body: call(
				infix
				name-range(114, *)
				[]
				[call(dot, name-range(108, width), [], [a]), call(dot, name-range(118, height), [], [a])]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(126, 149)
				main
				inststruct(range(131, 138), name-range(131, fut), [inststruct(range(135, 138), name-range(135, nat))])
				[
					param(
						range(139, 148)
						none
						inststruct(range(141, 148), name-range(141, arr), [inststruct(range(145, 148), name-range(145, str))]))])
			summon: true
			body: let(
				name-range(158, r)
				call(
					prefix
					name-range(162, rect)
					[]
					[
						literal(
							float(
								1.5
								false))
						literal(
							float(
								2.5
								false))])
				seq-ast(
					call(
						prefix
						name-range(178, print)
						[]
						[call(infix, name-range(192, to-str), [], [call(dot, name-range(187, area), [], [r])])])
					call(infix, name-range(202, resolved), [], [literal(nat(0, false))]))))])

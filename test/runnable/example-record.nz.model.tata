module(
	path: 21
	imports: [import(none, 19, none), import(some(range(8, 10)), 13, some([exit-code, print]))]
	exports: []
	structs: [struct(range: file-range(21, range(29, 69)), public?: true, name: rect)]
	specs: []
	funs: [
		fun(
			public?: true
			sig: sig(file-pos(21, 69), area, float(), [param(file-range(21, range(80, 86)), some(a), rect())])
			body: call(
				fun-inst(name: *)
				[call(fun-inst(name: width), [param-ref(a)]), call(fun-inst(name: height), [param-ref(a)])]))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(21, 109), main, fut(int32()), [param(file-range(21, range(128, 137)), none, arr(arr(char())))])
			body: let(
				local(file-range(21, range(147, 148)), r, rect())
				call(
					fun-inst(name: rect)
					[
						literal(float(), 1.5)
						literal(float(), 2.5)])
				seq(
					call(
						fun-inst(name: print)
						[call(fun-inst(name: to-str), [call(fun-inst(name: area), [local-ref(r)])])])
					call(fun-inst(name: resolved, type-args: [int32()]), [literal(int32(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(21, 29)
				rect
				rect()
				[
					param(file-range(21, range(42, 53)), some(width), float())
					param(file-range(21, range(55, 67)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(21, 29)
				rect
				by-val(rect())
				[
					param(file-range(21, range(42, 53)), some(width), float())
					param(file-range(21, range(55, 67)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(21, 42), width, float(), [param(file-range(21, range(42, 53)), some(a), rect())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(21, 55), height, float(), [param(file-range(21, range(55, 67)), some(a), rect())])
			body: field-get(1))])

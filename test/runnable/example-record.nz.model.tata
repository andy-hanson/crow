module(
	path: 20
	imports: [
		import(18, none)
		import(8, none)
		import(0, none)
		import(1, none)
		import(9, none)
		import(5, none)
		import(16, none)
		import(17, none)
		import(6, none)
		import(7, none)
		import(15, none)
		import(11, none)
		import(10, none)
		import(12, none)]
	exports: []
	structs: [struct(range: file-range(20, range(37, 133)), public?: true, name: point)]
	specs: []
	funs: [
		fun(
			public?: true
			sig: sig(file-range(20, range(133, 153)), create-point, point(), [])
			body: record(
				point()
				[
					call(fun-inst(module: 11, name: literal), [string-lit("1")])
					call(fun-inst(module: 11, name: literal), [string-lit("2")])]))
		fun(
			public?: true
			sig: sig(file-range(20, range(336, 356)), get-x, float(), [param(file-range(20, range(348, 355)), a, point())])
			body: field-acc(param-ref(a), point(), x))
		fun(
			public?: true
			summon: true
			sig: sig(file-range(20, range(508, 540)), main, fut(int32()), [param(file-range(20, range(527, 539)), args, arr(arr(char())))])
			body: let(
				local(file-range(20, range(611, 612)), p, point())
				call(fun-inst(module: 20, name: create-point), [])
				let(
					local(file-range(20, range(666, 669)), p-x, float())
					call(fun-inst(module: 20, name: get-x), [local-ref(p)])
					seq(
						call(
							fun-inst(module: 12, name: print-sync)
							[call(fun-inst(module: 11, name: to-str), [local-ref(p-x)])])
						call(
							fun-inst(module: 16, name: resolved, type-args: [int32()])
							[call(fun-inst(module: 0, name: zero), [])])))))])

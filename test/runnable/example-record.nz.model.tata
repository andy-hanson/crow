module(
	path: 42
	imports: [import(none, 28, none), import(some(range(8, 16)), 20, some([print])), import(some(range(25, 35)), 39, some([exit-code]))]
	exports: []
	structs: [struct(range: file-range(42, range(48, 88)), public?: true, name: rect)]
	specs: []
	funs: [
		fun(
			public?: true
			sig: sig(file-pos(42, 88), area, float(), [param(file-range(42, range(99, 105)), some(a), rect())])
			body: call(
				fun-inst(name: *)
				[call(fun-inst(name: width), [param-ref(a)]), call(fun-inst(name: height), [param-ref(a)])]))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(42, 128), main, fut(int32()), [param(file-range(42, range(147, 156)), none, arr(arr(char())))])
			body: let(
				local(file-range(42, range(166, 167)), r, rect())
				call(
					fun-inst(name: rect)
					[
						literal(float(), 1.5)
						literal(float(), 2.5)])
				seq(
					call(
						fun-inst(name: print)
						[call(fun-inst(name: to-str), [call(fun-inst(name: area), [local-ref(r)])])])
					call(fun-inst(name: resolved, type-args: [int32()]), [literal(int32(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(42, 48)
				rect
				rect()
				[
					param(file-range(42, range(61, 72)), some(width), float())
					param(file-range(42, range(74, 86)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(42, 48)
				rect
				by-val(rect())
				[
					param(file-range(42, range(61, 72)), some(width), float())
					param(file-range(42, range(74, 86)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(42, 61), width, float(), [param(file-range(42, range(61, 72)), some(a), rect())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(42, 74), height, float(), [param(file-range(42, range(74, 86)), some(a), rect())])
			body: field-get(1))])

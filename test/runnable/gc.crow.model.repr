module(
	path: 61
	imports: [
		import(none, 45, none)
		import(
			some(range(8, 128))
			16
			some([cur-word, gc-count, gc-stats, get-gc, get-stats, force-needs-gc, set-hard-limit, words-free, words-used]))
		import(some(range(130, 145)), 35, some([print]))
		import(some(range(147, 182)), 5, some([-, as-any-ptr, by-val, size-of]))]
	structs: [struct(range: file-range(61, range(825, 856)), public?: true, name: r)]
	funs: [
		fun(
			public?: true
			summon: true
			unsafe: true
			sig: sig(file-pos(61, 184), main, fut(nat()), [param(file-range(61, range(197, 206)), none, arr(arr(char())))])
			body: let(
				local(file-range(61, range(223, 225)), gc, gc())
				call(fun-inst(name: get-gc), [])
				seq(
					call(fun-inst(name: set-hard-limit), [local-ref(gc), literal(nat(), 512)])
					let(
						local(file-range(61, range(324, 325)), a, r())
						call(fun-inst(name: r), [literal(nat(), 1), literal(nat(), 2), literal(nat(), 3)])
						let(
							local(file-range(61, range(340, 341)), b, r())
							call(fun-inst(name: r), [literal(nat(), 4), literal(nat(), 5), literal(nat(), 6)])
							seq(
								seq(
									seq(
										seq(
											seq(
												seq(
													seq(
														call(
															fun-inst(name: assert)
															[
																call(
																	fun-inst(name: ==, type-args: [nat()])
																	[
																		call(
																			fun-inst(
																				name: size-of
																				type-args: [by-val(r())])
																			[])
																		literal(nat(), 24)])])
														call(
															fun-inst(name: assert)
															[
																call(
																	fun-inst(name: ==, type-args: [nat()])
																	[
																		call(
																			fun-inst(name: -, type-args: [nat8()])
																			[
																				call(
																					fun-inst(
																						name: as-any-ptr
																						type-args: [r()])
																					[local-ref(b)])
																				call(
																					fun-inst(
																						name: as-any-ptr
																						type-args: [r()])
																					[local-ref(a)])])
																		literal(nat(), 24)])]))
													call(
														fun-inst(name: print)
														[
															call(
																fun-inst(name: ~, type-args: [char()])
																[
																	string-lit("stats: ")
																	call(
																		fun-inst(name: to-str)
																		[
																			call(
																				fun-inst(name: get-stats)
																				[local-ref(gc)])])])]))
												call(
													fun-inst(name: print)
													[
														call(
															fun-inst(name: ~, type-args: [char()])
															[
																string-lit("gc count: ")
																call(
																	fun-inst(name: to-str)
																	[call(fun-inst(name: gc-count), [local-ref(gc)])])])]))
											call(
												fun-inst(name: print)
												[
													call(
														fun-inst(name: ~, type-args: [char()])
														[
															string-lit("a: ")
															call(fun-inst(name: to-str), [local-ref(a)])])]))
										call(
											fun-inst(name: print)
											[
												call(
													fun-inst(name: ~, type-args: [char()])
													[
														string-lit("stats (after print): ")
														call(
															fun-inst(name: to-str)
															[call(fun-inst(name: get-stats), [local-ref(gc)])])])]))
									call(fun-inst(name: force-needs-gc), [local-ref(gc)]))
								call(
									fun-inst(name: then-void, type-args: [nat()])
									[
										call(fun-inst(name: delay), [])
										lambda(
											[]
											seq(
												seq(
													seq(
														seq(
															seq(
																call(
																	fun-inst(name: print)
																	[string-lit("-- after gc --")])
																call(
																	fun-inst(name: print)
																	[
																		call(
																			fun-inst(name: ~, type-args: [char()])
																			[
																				string-lit("stats: ")
																				call(
																					fun-inst(name: to-str)
																					[
																						call(
																							fun-inst(name: get-stats)
																							[closure-rf(gc)])])])]))
															call(
																fun-inst(name: print)
																[
																	call(
																		fun-inst(name: ~, type-args: [char()])
																		[
																			string-lit("gc count: ")
																			call(
																				fun-inst(name: to-str)
																				[
																					call(
																						fun-inst(name: gc-count)
																						[closure-rf(gc)])])])]))
														call(
															fun-inst(name: print)
															[
																call(
																	fun-inst(name: ~, type-args: [char()])
																	[
																		string-lit("a: ")
																		call(fun-inst(name: to-str), [closure-rf(a)])])]))
													call(
														fun-inst(name: print)
														[
															call(
																fun-inst(name: ~, type-args: [char()])
																[
																	string-lit("stats (after print): ")
																	call(
																		fun-inst(name: to-str)
																		[
																			call(
																				fun-inst(name: get-stats)
																				[closure-rf(gc)])])])]))
												call(fun-inst(name: resolved, type-args: [nat()]), [literal(nat(), 0)]))
											[closure-f(gc, gc(), local-ref(gc)), closure-f(a, r(), local-ref(a))]
											fun-ref0(nat())
											ref
											fut(nat()))])))))))
		fun(
			public?: true
			sig: sig(file-pos(61, 856), to-str, arr(char()), [param(file-range(61, range(867, 870)), some(a), r())])
			body: call(
				fun-inst(name: ~, type-args: [char()])
				[
					call(
						fun-inst(name: ~, type-args: [char()])
						[
							call(
								fun-inst(name: ~, type-args: [char()])
								[
									call(
										fun-inst(name: ~, type-args: [char()])
										[
											call(
												fun-inst(name: ~, type-args: [char()])
												[
													string-lit("a=")
													call(
														fun-inst(name: to-str)
														[call(fun-inst(name: a), [param-ref(a)])])])
											string-lit(", b=")])
									call(fun-inst(name: to-str), [call(fun-inst(name: b), [param-ref(a)])])])
							string-lit(", c=")])
					call(fun-inst(name: to-str), [call(fun-inst(name: c), [param-ref(a)])])]))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(61, 936), to-str, arr(char()), [param(file-range(61, range(947, 957)), some(a), gc-stats())])
			body: call(
				fun-inst(name: ~, type-args: [char()])
				[
					call(
						fun-inst(name: ~, type-args: [char()])
						[
							call(
								fun-inst(name: ~, type-args: [char()])
								[
									call(
										fun-inst(name: ~, type-args: [char()])
										[
											call(
												fun-inst(name: ~, type-args: [char()])
												[
													string-lit("cur-word=")
													call(
														fun-inst(name: to-str)
														[call(fun-inst(name: cur-word), [param-ref(a)])])])
											string-lit(", words-used=")])
									call(fun-inst(name: to-str), [call(fun-inst(name: words-used), [param-ref(a)])])])
							string-lit(", words-free=")])
					call(fun-inst(name: to-str), [call(fun-inst(name: words-free), [param-ref(a)])])]))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(61, 825)
				r
				r()
				[
					param(file-range(61, range(835, 840)), some(a), nat())
					param(file-range(61, range(842, 847)), some(b), nat())
					param(file-range(61, range(849, 854)), some(c), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(61, 825)
				r
				by-val(r())
				[
					param(file-range(61, range(835, 840)), some(a), nat())
					param(file-range(61, range(842, 847)), some(b), nat())
					param(file-range(61, range(849, 854)), some(c), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(61, 835), a, nat(), [param(file-range(61, range(835, 840)), some(a), r())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(61, 842), b, nat(), [param(file-range(61, range(842, 847)), some(a), r())])
			body: field-get(1))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(61, 849), c, nat(), [param(file-range(61, range(849, 854)), some(a), r())])
			body: field-get(2))])

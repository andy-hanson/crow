file-ast(
	imports: ports(range(0, 59), [import-ast(0, "/io", some([exit-code, print-sync]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(59, 155)
			true
			[]
			none
			record(
				none
				[
					field(range(73, 80), false, x, inststruct(range(75, 80), name-range(75, float)))
					field(range(82, 89), false, y, inststruct(range(84, 89), name-range(84, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(range(155, 175), create-point, inststruct(range(168, 173), name-range(168, point)), [])
			body: call(prefix, name-range(177, point), [], [literal(numeric, "1"), literal(numeric, "2")]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(273, 293)
				get-x
				inststruct(range(279, 284), name-range(279, float))
				[param(range(285, 292), name-range(285, a), inststruct(range(287, 292), name-range(287, point)))])
			body: call(infix, name-range(370, x), [], [a]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(445, 477)
				main
				inststruct(range(450, 463), name-range(450, fut), [inststruct(range(454, 463), name-range(454, exit-code))])
				[
					param(
						range(464, 476)
						name-range(464, args)
						inststruct(range(469, 476), name-range(469, arr), [inststruct(range(473, 476), name-range(473, str))]))])
			summon: true
			body: let(
				name-range(548, p)
				create-point
				let(
					name-range(603, p-x)
					call(infix, name-range(611, get-x), [], [p])
					seq-ast(
						call(prefix, name-range(870, print-sync), [], [call(infix, name-range(886, to-str), [], [p-x])])
						call(infix, name-range(899, resolved), [], [zero])))))])

file-ast(
	imports: ports(range(0, 37), [import-ast(0, "/io", none)])
	specs: []
	aliases: []
	structs: [
		struct(
			range(37, 133)
			true
			[]
			none
			record(
				none
				[
					field(range(51, 58), false, x, inststruct(range(53, 58), name-range(53, float)))
					field(range(60, 67), false, y, inststruct(range(62, 67), name-range(62, float)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(range(133, 153), create-point, inststruct(range(146, 151), name-range(146, point)), [])
			body: new-record(none, [literal(numeric, "1"), literal(numeric, "2")]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(336, 356)
				get-x
				inststruct(range(342, 347), name-range(342, float))
				[param(range(348, 355), name-range(348, a), inststruct(range(350, 355), name-range(350, point)))])
			body: call(infix, name-range(433, x), [], [a]))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(508, 540)
				main
				inststruct(range(513, 526), name-range(513, fut), [inststruct(range(517, 526), name-range(517, exit-code))])
				[
					param(
						range(527, 539)
						name-range(527, args)
						inststruct(range(532, 539), name-range(532, arr), [inststruct(range(536, 539), name-range(536, str))]))])
			summon: true
			body: let(
				name-range(611, p)
				create-point
				let(
					name-range(666, p-x)
					call(infix, name-range(674, get-x), [], [p])
					seq-ast(
						call(prefix, name-range(933, print-sync), [], [call(infix, name-range(949, to-str), [], [p-x])])
						call(infix, name-range(962, resolved), [], [zero])))))])

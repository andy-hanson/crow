module(
	path: 71
	imports: [import(none, 52, none), import(some(range(8, 28)), 44, some([print]))]
	structs: [struct(range: file-range(71, range(170, 201)), public?: true, name: my-record)]
	funs: [
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(71, 30), main, fut(nat()), [param(file-range(71, range(43, 52)), none, arr(str()))])
			body: let(
				local(file-range(71, range(62, 63)), m, my-record())
				call(fun-inst(name: my-record), [literal(nat(), 1), literal(nat(), 2)])
				seq(
					seq(
						seq(
							seq(
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==)
											[call(fun-inst(name: x), [local-ref(m)]), literal(nat(), 1)])])
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==)
											[call(fun-inst(name: y), [local-ref(m)]), literal(nat(), 2)])]))
							call(
								fun-inst(name: print)
								[call(fun-inst(name: to-str), [call(fun-inst(name: x), [local-ref(m)])])]))
						call(
							fun-inst(name: print)
							[call(fun-inst(name: to-str), [call(fun-inst(name: y), [local-ref(m)])])]))
					call(fun-inst(name: resolved, type-args: [nat()]), [literal(nat(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(71, 170)
				my-record
				my-record()
				[param(file-range(71, range(188, 193)), some(x), nat()), param(file-range(71, range(195, 200)), some(y), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(71, 170)
				my-record
				by-val(my-record())
				[param(file-range(71, range(188, 193)), some(x), nat()), param(file-range(71, range(195, 200)), some(y), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(71, 188), x, nat(), [param(file-range(71, range(188, 193)), some(a), my-record())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(71, 195), y, nat(), [param(file-range(71, range(195, 200)), some(a), my-record())])
			body: field-get(1))])

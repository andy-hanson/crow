file-ast(
	imports: ports(range(0, 23), [import-ast(0, "/io", some([exit-code]))])
	specs: []
	aliases: []
	structs: []
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(23, 55)
				main
				inststruct(range(28, 41), name-range(28, fut), [inststruct(range(32, 41), name-range(32, exit-code))])
				[
					param(
						range(42, 54)
						name-range(42, args)
						inststruct(range(47, 54), name-range(47, arr), [inststruct(range(51, 54), name-range(51, str))]))])
			summon: true
			body: seq-ast(
				call(infix, name-range(69, log), [], [info, literal("Logged once")])
				let(
					name-range(88, lh)
					get-log-handler
					let(
						name-range(110, doubler)
						call(
							prefix
							name-range(120, as)
							[inststruct(range(123, 134), name-range(123, log-handler))]
							[lambda([name-range(138, logged)])])
						seq-ast(
							seq-ast(
								call(infix, name-range(188, with-log-handler), [], [doubler, lambda([])])
								call(
									infix
									name-range(244, with-log-handler)
									[]
									[lambda([name-range(234, it)]), lambda([])]))
							call(infix, name-range(292, resolved), [], [literal(nat(0, false))]))))))])

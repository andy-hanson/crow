file-ast(
	imports: ports(range(0, 23), [import-ast(0, "/io", some([exit-code]))])
	specs: []
	aliases: []
	structs: []
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(23, 52)
				main
				inststruct(range(28, 41), name-range(28, fut), [inststruct(range(32, 41), name-range(32, exit-code))])
				[
					param(
						range(42, 51)
						none
						inststruct(range(44, 51), name-range(44, arr), [inststruct(range(48, 51), name-range(48, str))]))])
			summon: true
			body: seq-ast(
				call(infix, name-range(66, log), [], [info, literal("Logged once")])
				let(
					name-range(85, lh)
					get-log-handler
					let(
						name-range(107, doubler)
						call(
							prefix
							name-range(117, as)
							[inststruct(range(120, 131), name-range(120, log-handler))]
							[lambda([name-range(135, logged)])])
						seq-ast(
							seq-ast(
								call(infix, name-range(185, with-log-handler), [], [doubler, lambda([])])
								call(
									infix
									name-range(241, with-log-handler)
									[]
									[lambda([name-range(231, it)]), lambda([])]))
							call(infix, name-range(289, resolved), [], [literal(nat(0, false))]))))))])

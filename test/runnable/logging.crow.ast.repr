file-ast(
	imports: ports(
		range(0, 82)
		[import-ast(0, "/logging", some([get-log-handler, info, log, log-handler, warn, with-log-handler]))])
	specs: []
	aliases: []
	structs: []
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(82, 105)
				main
				inststruct(range(87, 94), name-range(87, fut), [inststruct(range(91, 94), name-range(91, nat))])
				[
					param(
						range(95, 104)
						none
						inststruct(range(97, 104), name-range(97, arr), [inststruct(range(101, 104), name-range(101, str))]))])
			summon: true
			body: seq-ast(
				call(infix, name-range(119, log), [], [info, literal("Logged once")])
				let(
					name-range(138, lh)
					get-log-handler
					let(
						name-range(160, doubler)
						call(
							prefix
							name-range(170, as)
							[inststruct(range(173, 184), name-range(173, log-handler))]
							[lambda([name-range(188, logged)])])
						seq-ast(
							seq-ast(
								call(infix, name-range(230, with-log-handler), [], [doubler, lambda([])])
								call(
									infix
									name-range(286, with-log-handler)
									[]
									[lambda([name-range(276, it)]), lambda([])]))
							call(infix, name-range(334, resolved), [], [literal(nat(0, false))]))))))])

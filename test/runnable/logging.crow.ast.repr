file-ast(
	imports: ports(
		range(0, 105)
		[
			import-ast(0, "/io/process", some([exit-code]))
			import-ast(0, "/logging", some([get-log-handler, info, log, log-handler, warn, with-log-handler]))])
	specs: []
	aliases: []
	structs: []
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(105, 134)
				main
				inststruct(range(110, 123), name-range(110, fut), [inststruct(range(114, 123), name-range(114, exit-code))])
				[
					param(
						range(124, 133)
						none
						inststruct(range(126, 133), name-range(126, arr), [inststruct(range(130, 133), name-range(130, str))]))])
			summon: true
			body: seq-ast(
				call(infix, name-range(148, log), [], [info, literal("Logged once")])
				let(
					name-range(167, lh)
					get-log-handler
					let(
						name-range(189, doubler)
						call(
							prefix
							name-range(199, as)
							[inststruct(range(202, 213), name-range(202, log-handler))]
							[lambda([name-range(217, logged)])])
						seq-ast(
							seq-ast(
								call(infix, name-range(259, with-log-handler), [], [doubler, lambda([])])
								call(
									infix
									name-range(315, with-log-handler)
									[]
									[lambda([name-range(305, it)]), lambda([])]))
							call(infix, name-range(363, resolved), [], [literal(nat(0, false))]))))))])

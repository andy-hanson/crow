file-ast(
	imports: ports(range(0, 30), [import-ast(0, "/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(132, 164)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(150, 155), false, a, inststruct(range(152, 155), name-range(152, str)))
					field(range(157, 162), false, b, inststruct(range(159, 162), name-range(159, str)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(30, 53)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[
					param(
						range(43, 52)
						none
						inststruct(range(45, 52), name-range(45, arr), [inststruct(range(49, 52), name-range(49, str))]))])
			summon: true
			body: let(
				name-range(62, r)
				call(prefix, name-range(66, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(87, foo), [], [r])
							call(prefix, name-range(95, print), [], [call(infix, name-range(104, a), [], [r])]))
						call(prefix, name-range(107, print), [], [call(infix, name-range(116, b), [], [r])]))
					call(prefix, name-range(119, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(164, 185)
				foo
				inststruct(range(168, 172), name-range(168, void))
				[param(range(173, 184), some(r), inststruct(range(175, 184), name-range(175, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(194, print), [], [call(infix, name-range(203, a), [], [r])])
				call(prefix, name-range(206, print), [], [call(infix, name-range(215, b), [], [r])])))])

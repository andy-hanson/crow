file-ast(
	imports: ports(range(0, 30), [import-ast("/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(130, 162)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(148, 153), false, a, inststruct(range(150, 153), name-range(150, str)))
					field(range(155, 160), false, b, inststruct(range(157, 160), name-range(157, str)))]))]
	funs: [
		fun-decl(
			public: true
			sig: sig-ast(
				range(30, 51)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[param(range(43, 50), none, suffix(inststruct(range(45, 48), name-range(45, str)), arr))])
			summon: true
			body: let(
				name-range(60, r)
				call(prefix, name-range(64, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(85, foo), [], [r])
							call(prefix, name-range(93, print), [], [call(infix, name-range(102, a), [], [r])]))
						call(prefix, name-range(105, print), [], [call(infix, name-range(114, b), [], [r])]))
					call(prefix, name-range(117, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public: true
			sig: sig-ast(
				range(162, 183)
				foo
				inststruct(range(166, 170), name-range(166, void))
				[param(range(171, 182), some(r), inststruct(range(173, 182), name-range(173, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(192, print), [], [call(infix, name-range(201, a), [], [r])])
				call(prefix, name-range(204, print), [], [call(infix, name-range(213, b), [], [r])])))])

file-ast(
	imports: ports(range(0, 30), [import-ast("crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(129, 161)
			""
			public
			[]
			none
			record(
				none
				[
					field(range(147, 152), const, a, inststruct(range(149, 152), name-range(149, str)))
					field(range(154, 159), const, b, inststruct(range(156, 159), name-range(156, str)))]))]
	funs: [
		fun-decl(
			visibility: public
			sig: sig-ast(
				range(30, 52)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[param(range(43, 50), none, suffix(inststruct(range(45, 48), name-range(45, str)), arr))])
			summon: true
			body: let(
				r
				call(comma, name-range(74, new), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(84, foo), [], [r])
							call(prefix, name-range(92, print), [], [call(infix, name-range(101, a), [], [r])]))
						call(prefix, name-range(104, print), [], [call(infix, name-range(113, b), [], [r])]))
					call(prefix, name-range(116, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			visibility: public
			sig: sig-ast(
				range(161, 183)
				foo
				inststruct(range(165, 169), name-range(165, void))
				[param(range(170, 181), some(r), inststruct(range(172, 181), name-range(172, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(191, print), [], [call(infix, name-range(200, a), [], [r])])
				call(prefix, name-range(203, print), [], [call(infix, name-range(212, b), [], [r])])))])

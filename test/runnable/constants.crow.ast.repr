file-ast(
	imports: ports(range(0, 25), [import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(127, 159)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(145, 150), false, a, inststruct(range(147, 150), name-range(147, str)))
					field(range(152, 157), false, b, inststruct(range(154, 157), name-range(154, str)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(25, 48)
				main
				inststruct(range(30, 37), name-range(30, fut), [inststruct(range(34, 37), name-range(34, nat))])
				[
					param(
						range(38, 47)
						none
						inststruct(range(40, 47), name-range(40, arr), [inststruct(range(44, 47), name-range(44, str))]))])
			summon: true
			body: let(
				name-range(57, r)
				call(prefix, name-range(61, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(82, foo), [], [r])
							call(prefix, name-range(90, print), [], [call(infix, name-range(99, a), [], [r])]))
						call(prefix, name-range(102, print), [], [call(infix, name-range(111, b), [], [r])]))
					call(prefix, name-range(114, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(159, 180)
				foo
				inststruct(range(163, 167), name-range(163, void))
				[param(range(168, 179), some(r), inststruct(range(170, 179), name-range(170, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(189, print), [], [call(infix, name-range(198, a), [], [r])])
				call(prefix, name-range(201, print), [], [call(infix, name-range(210, b), [], [r])])))])

file-ast(
	imports: ports(range(0, 42), [import-ast(0, "/bootstrap", some([void])), import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(144, 176)
			true
			[]
			none
			record(
				none
				[
					field(range(162, 167), false, a, inststruct(range(164, 167), name-range(164, str)))
					field(range(169, 174), false, b, inststruct(range(171, 174), name-range(171, str)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(42, 65)
				main
				inststruct(range(47, 54), name-range(47, fut), [inststruct(range(51, 54), name-range(51, nat))])
				[
					param(
						range(55, 64)
						none
						inststruct(range(57, 64), name-range(57, arr), [inststruct(range(61, 64), name-range(61, str))]))])
			summon: true
			body: let(
				name-range(74, r)
				call(prefix, name-range(78, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(99, foo), [], [r])
							call(prefix, name-range(107, print), [], [call(infix, name-range(116, a), [], [r])]))
						call(prefix, name-range(119, print), [], [call(infix, name-range(128, b), [], [r])]))
					call(prefix, name-range(131, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(176, 197)
				foo
				inststruct(range(180, 184), name-range(180, void))
				[param(range(185, 196), some(r), inststruct(range(187, 196), name-range(187, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(206, print), [], [call(infix, name-range(215, a), [], [r])])
				call(prefix, name-range(218, print), [], [call(infix, name-range(227, b), [], [r])])))])

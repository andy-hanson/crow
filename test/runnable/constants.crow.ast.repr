file-ast(
	imports: ports(range(0, 52), [import-ast(0, "/bootstrap", some([fut, str, void])), import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(154, 186)
			true
			[]
			none
			record(
				none
				[
					field(range(172, 177), false, a, inststruct(range(174, 177), name-range(174, str)))
					field(range(179, 184), false, b, inststruct(range(181, 184), name-range(181, str)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(52, 75)
				main
				inststruct(range(57, 64), name-range(57, fut), [inststruct(range(61, 64), name-range(61, nat))])
				[
					param(
						range(65, 74)
						none
						inststruct(range(67, 74), name-range(67, arr), [inststruct(range(71, 74), name-range(71, str))]))])
			summon: true
			body: let(
				name-range(84, r)
				call(prefix, name-range(88, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(109, foo), [], [r])
							call(prefix, name-range(117, print), [], [call(infix, name-range(126, a), [], [r])]))
						call(prefix, name-range(129, print), [], [call(infix, name-range(138, b), [], [r])]))
					call(prefix, name-range(141, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(186, 207)
				foo
				inststruct(range(190, 194), name-range(190, void))
				[param(range(195, 206), some(r), inststruct(range(197, 206), name-range(197, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(216, print), [], [call(infix, name-range(225, a), [], [r])])
				call(prefix, name-range(228, print), [], [call(infix, name-range(237, b), [], [r])])))])

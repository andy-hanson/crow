module(
	path: 42
	imports: [import(none, 28, none), import(some(range(8, 16)), 20, some([print])), import(some(range(25, 35)), 39, some([exit-code]))]
	exports: []
	structs: [struct(range: file-range(42, range(156, 188)), public?: true, name: my-record)]
	specs: []
	funs: [
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(42, 48), main, fut(int32()), [param(file-range(42, range(67, 76)), none, arr(arr(char())))])
			body: let(
				local(file-range(42, range(86, 87)), r, my-record())
				call(fun-inst(name: my-record), [string-lit("a"), string-lit("b")])
				seq(
					seq(
						seq(
							call(fun-inst(name: foo), [local-ref(r)])
							call(fun-inst(name: print), [call(fun-inst(name: a), [local-ref(r)])]))
						call(fun-inst(name: print), [call(fun-inst(name: b), [local-ref(r)])]))
					call(fun-inst(name: resolved, type-args: [int32()]), [literal(int32(), 0)]))))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(42, 188), foo, void(), [param(file-range(42, range(197, 208)), some(r), my-record())])
			body: seq(
				call(fun-inst(name: print), [call(fun-inst(name: a), [param-ref(r)])])
				call(fun-inst(name: print), [call(fun-inst(name: b), [param-ref(r)])])))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(42, 156)
				my-record
				my-record()
				[
					param(file-range(42, range(174, 179)), some(a), arr(char()))
					param(file-range(42, range(181, 186)), some(b), arr(char()))])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(42, 156)
				my-record
				by-val(my-record())
				[
					param(file-range(42, range(174, 179)), some(a), arr(char()))
					param(file-range(42, range(181, 186)), some(b), arr(char()))])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(42, 174), a, arr(char()), [param(file-range(42, range(174, 179)), some(a), my-record())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(42, 181), b, arr(char()), [param(file-range(42, range(181, 186)), some(a), my-record())])
			body: field-get(1))])

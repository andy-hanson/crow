file-ast(
	imports: ports(range(0, 48), [import-ast(0, "/io/print", some([print])), import-ast(0, "/io/process", some([exit-code]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(170, 202)
			true
			[]
			none
			record(
				none
				[
					field(range(188, 193), false, x, inststruct(range(190, 193), name-range(190, nat)))
					field(range(195, 200), false, y, inststruct(range(197, 200), name-range(197, nat)))]))
		struct(
			range(202, 248)
			true
			[]
			none
			record(
				some(by-val-ref(226, by-ref))
				[
					field(range(234, 239), false, x, inststruct(range(236, 239), name-range(236, nat)))
					field(range(241, 246), false, y, inststruct(range(243, 246), name-range(243, nat)))]))
		struct(range(248, 272), true, [], none, record(none, []))
		struct(
			range(272, 316)
			true
			[]
			none
			union(
				[inststruct(range(288, 297), name-range(288, my-record)), inststruct(range(299, 314), name-range(299, my-other-record))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(48, 77)
				main
				inststruct(range(53, 66), name-range(53, fut), [inststruct(range(57, 66), name-range(57, exit-code))])
				[
					param(
						range(67, 76)
						none
						inststruct(range(69, 76), name-range(69, arr), [inststruct(range(73, 76), name-range(73, str))]))])
			summon: true
			body: seq-ast(
				seq-ast(seq-ast(test-compare-records, test-compare-byref-records), test-compare-unions)
				call(prefix, name-range(157, resolved), [], [literal(nat(0, false))])))
		fun-decl(
			public?: true
			sig: sig-ast(range(316, 343), test-compare-records, inststruct(range(337, 341), name-range(337, void)), [])
			summon: true
			body: let(
				name-range(352, a)
				call(prefix, name-range(356, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(373, b)
					call(prefix, name-range(377, my-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(394, c)
						call(prefix, name-range(398, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(415, d)
							call(prefix, name-range(419, my-record), [], [literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(436, print)
										[]
										[
											call(
												infix
												name-range(451, to-str)
												[]
												[call(infix, name-range(445, <=>), [], [a, b])])])
									call(
										prefix
										name-range(459, print)
										[]
										[
											call(
												infix
												name-range(474, to-str)
												[]
												[call(infix, name-range(468, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(482, print)
									[]
									[
										call(
											infix
											name-range(497, to-str)
											[]
											[call(infix, name-range(491, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(505, 538), test-compare-byref-records, inststruct(range(532, 536), name-range(532, void)), [])
			summon: true
			body: let(
				name-range(547, a)
				call(prefix, name-range(551, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(574, b)
					call(prefix, name-range(578, my-byref-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(601, c)
						call(prefix, name-range(605, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(628, d)
							call(
								prefix
								name-range(632, my-byref-record)
								[]
								[literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(655, print)
										[]
										[
											call(
												infix
												name-range(670, to-str)
												[]
												[call(infix, name-range(664, <=>), [], [a, b])])])
									call(
										prefix
										name-range(678, print)
										[]
										[
											call(
												infix
												name-range(693, to-str)
												[]
												[call(infix, name-range(687, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(701, print)
									[]
									[
										call(
											infix
											name-range(716, to-str)
											[]
											[call(infix, name-range(710, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(724, 750), test-compare-unions, inststruct(range(744, 748), name-range(744, void)), [])
			summon: true
			body: let(
				name-range(759, a)
				call(
					prefix
					name-range(763, as)
					[inststruct(range(766, 774), name-range(766, my-union))]
					[call(prefix, name-range(777, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
				let(
					name-range(794, b)
					call(prefix, name-range(798, as), [inststruct(range(801, 809), name-range(801, my-union))], [my-other-record])
					let(
						name-range(829, c)
						call(
							prefix
							name-range(833, as)
							[inststruct(range(836, 844), name-range(836, my-union))]
							[call(prefix, name-range(847, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
						let(
							name-range(864, d)
							call(
								prefix
								name-range(868, as)
								[inststruct(range(871, 879), name-range(871, my-union))]
								[
									call(
										prefix
										name-range(882, my-record)
										[]
										[literal(nat(1, false)), literal(nat(1, false))])])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(900, print)
										[]
										[
											call(
												infix
												name-range(915, to-str)
												[]
												[call(infix, name-range(909, <=>), [], [a, b])])])
									call(
										prefix
										name-range(923, print)
										[]
										[
											call(
												infix
												name-range(938, to-str)
												[]
												[call(infix, name-range(932, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(946, print)
									[]
									[
										call(
											infix
											name-range(961, to-str)
											[]
											[call(infix, name-range(955, <=>), [], [a, d])])])))))))])

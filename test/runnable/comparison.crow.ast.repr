file-ast(
	imports: ports(range(0, 56), [import-ast(0, "/bootstrap", some([as, fut, str, void])), import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(172, 204)
			true
			[]
			none
			record(
				none
				[
					field(range(190, 195), false, x, inststruct(range(192, 195), name-range(192, nat)))
					field(range(197, 202), false, y, inststruct(range(199, 202), name-range(199, nat)))]))
		struct(
			range(204, 250)
			true
			[]
			none
			record(
				some(by-val-ref(228, by-ref))
				[
					field(range(236, 241), false, x, inststruct(range(238, 241), name-range(238, nat)))
					field(range(243, 248), false, y, inststruct(range(245, 248), name-range(245, nat)))]))
		struct(range(250, 274), true, [], none, record(none, []))
		struct(
			range(274, 318)
			true
			[]
			none
			union(
				[inststruct(range(290, 299), name-range(290, my-record)), inststruct(range(301, 316), name-range(301, my-other-record))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(56, 79)
				main
				inststruct(range(61, 68), name-range(61, fut), [inststruct(range(65, 68), name-range(65, nat))])
				[
					param(
						range(69, 78)
						none
						inststruct(range(71, 78), name-range(71, arr), [inststruct(range(75, 78), name-range(75, str))]))])
			summon: true
			body: seq-ast(
				seq-ast(seq-ast(test-compare-records, test-compare-byref-records), test-compare-unions)
				call(prefix, name-range(159, resolved), [], [literal(nat(0, false))])))
		fun-decl(
			public?: true
			sig: sig-ast(range(318, 345), test-compare-records, inststruct(range(339, 343), name-range(339, void)), [])
			summon: true
			body: let(
				name-range(354, a)
				call(prefix, name-range(358, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(375, b)
					call(prefix, name-range(379, my-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(396, c)
						call(prefix, name-range(400, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(417, d)
							call(prefix, name-range(421, my-record), [], [literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(438, print)
										[]
										[
											call(
												infix
												name-range(453, to-str)
												[]
												[call(infix, name-range(447, <=>), [], [a, b])])])
									call(
										prefix
										name-range(461, print)
										[]
										[
											call(
												infix
												name-range(476, to-str)
												[]
												[call(infix, name-range(470, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(484, print)
									[]
									[
										call(
											infix
											name-range(499, to-str)
											[]
											[call(infix, name-range(493, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(507, 540), test-compare-byref-records, inststruct(range(534, 538), name-range(534, void)), [])
			summon: true
			body: let(
				name-range(549, a)
				call(prefix, name-range(553, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(576, b)
					call(prefix, name-range(580, my-byref-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(603, c)
						call(prefix, name-range(607, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(630, d)
							call(
								prefix
								name-range(634, my-byref-record)
								[]
								[literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(657, print)
										[]
										[
											call(
												infix
												name-range(672, to-str)
												[]
												[call(infix, name-range(666, <=>), [], [a, b])])])
									call(
										prefix
										name-range(680, print)
										[]
										[
											call(
												infix
												name-range(695, to-str)
												[]
												[call(infix, name-range(689, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(703, print)
									[]
									[
										call(
											infix
											name-range(718, to-str)
											[]
											[call(infix, name-range(712, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(726, 752), test-compare-unions, inststruct(range(746, 750), name-range(746, void)), [])
			summon: true
			body: let(
				name-range(761, a)
				call(
					prefix
					name-range(765, as)
					[inststruct(range(768, 776), name-range(768, my-union))]
					[call(prefix, name-range(779, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
				let(
					name-range(796, b)
					call(prefix, name-range(800, as), [inststruct(range(803, 811), name-range(803, my-union))], [my-other-record])
					let(
						name-range(831, c)
						call(
							prefix
							name-range(835, as)
							[inststruct(range(838, 846), name-range(838, my-union))]
							[call(prefix, name-range(849, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
						let(
							name-range(866, d)
							call(
								prefix
								name-range(870, as)
								[inststruct(range(873, 881), name-range(873, my-union))]
								[
									call(
										prefix
										name-range(884, my-record)
										[]
										[literal(nat(1, false)), literal(nat(1, false))])])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(902, print)
										[]
										[
											call(
												infix
												name-range(917, to-str)
												[]
												[call(infix, name-range(911, <=>), [], [a, b])])])
									call(
										prefix
										name-range(925, print)
										[]
										[
											call(
												infix
												name-range(940, to-str)
												[]
												[call(infix, name-range(934, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(948, print)
									[]
									[
										call(
											infix
											name-range(963, to-str)
											[]
											[call(infix, name-range(957, <=>), [], [a, d])])])))))))])

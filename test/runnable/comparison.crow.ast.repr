file-ast(
	imports: ports(range(0, 25), [import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(141, 173)
			true
			[]
			none
			record(
				none
				[
					field(range(159, 164), false, x, inststruct(range(161, 164), name-range(161, nat)))
					field(range(166, 171), false, y, inststruct(range(168, 171), name-range(168, nat)))]))
		struct(
			range(173, 219)
			true
			[]
			none
			record(
				some(by-val-ref(197, by-ref))
				[
					field(range(205, 210), false, x, inststruct(range(207, 210), name-range(207, nat)))
					field(range(212, 217), false, y, inststruct(range(214, 217), name-range(214, nat)))]))
		struct(range(219, 243), true, [], none, record(none, []))
		struct(
			range(243, 287)
			true
			[]
			none
			union(
				[inststruct(range(259, 268), name-range(259, my-record)), inststruct(range(270, 285), name-range(270, my-other-record))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(25, 48)
				main
				inststruct(range(30, 37), name-range(30, fut), [inststruct(range(34, 37), name-range(34, nat))])
				[
					param(
						range(38, 47)
						none
						inststruct(range(40, 47), name-range(40, arr), [inststruct(range(44, 47), name-range(44, str))]))])
			summon: true
			body: seq-ast(
				seq-ast(seq-ast(test-compare-records, test-compare-byref-records), test-compare-unions)
				call(prefix, name-range(128, resolved), [], [literal(nat(0, false))])))
		fun-decl(
			public?: true
			sig: sig-ast(range(287, 314), test-compare-records, inststruct(range(308, 312), name-range(308, void)), [])
			summon: true
			body: let(
				name-range(323, a)
				call(prefix, name-range(327, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(344, b)
					call(prefix, name-range(348, my-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(365, c)
						call(prefix, name-range(369, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(386, d)
							call(prefix, name-range(390, my-record), [], [literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(407, print)
										[]
										[
											call(
												infix
												name-range(422, to-str)
												[]
												[call(infix, name-range(416, <=>), [], [a, b])])])
									call(
										prefix
										name-range(430, print)
										[]
										[
											call(
												infix
												name-range(445, to-str)
												[]
												[call(infix, name-range(439, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(453, print)
									[]
									[
										call(
											infix
											name-range(468, to-str)
											[]
											[call(infix, name-range(462, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(476, 509), test-compare-byref-records, inststruct(range(503, 507), name-range(503, void)), [])
			summon: true
			body: let(
				name-range(518, a)
				call(prefix, name-range(522, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				let(
					name-range(545, b)
					call(prefix, name-range(549, my-byref-record), [], [literal(nat(1, false)), literal(nat(3, false))])
					let(
						name-range(572, c)
						call(prefix, name-range(576, my-byref-record), [], [literal(nat(1, false)), literal(nat(2, false))])
						let(
							name-range(599, d)
							call(
								prefix
								name-range(603, my-byref-record)
								[]
								[literal(nat(0, false)), literal(nat(3, false))])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(626, print)
										[]
										[
											call(
												infix
												name-range(641, to-str)
												[]
												[call(infix, name-range(635, <=>), [], [a, b])])])
									call(
										prefix
										name-range(649, print)
										[]
										[
											call(
												infix
												name-range(664, to-str)
												[]
												[call(infix, name-range(658, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(672, print)
									[]
									[
										call(
											infix
											name-range(687, to-str)
											[]
											[call(infix, name-range(681, <=>), [], [a, d])])])))))))
		fun-decl(
			public?: true
			sig: sig-ast(range(695, 721), test-compare-unions, inststruct(range(715, 719), name-range(715, void)), [])
			summon: true
			body: let(
				name-range(730, a)
				call(
					prefix
					name-range(734, as)
					[inststruct(range(737, 745), name-range(737, my-union))]
					[call(prefix, name-range(748, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
				let(
					name-range(765, b)
					call(prefix, name-range(769, as), [inststruct(range(772, 780), name-range(772, my-union))], [my-other-record])
					let(
						name-range(800, c)
						call(
							prefix
							name-range(804, as)
							[inststruct(range(807, 815), name-range(807, my-union))]
							[call(prefix, name-range(818, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])])
						let(
							name-range(835, d)
							call(
								prefix
								name-range(839, as)
								[inststruct(range(842, 850), name-range(842, my-union))]
								[
									call(
										prefix
										name-range(853, my-record)
										[]
										[literal(nat(1, false)), literal(nat(1, false))])])
							seq-ast(
								seq-ast(
									call(
										prefix
										name-range(871, print)
										[]
										[
											call(
												infix
												name-range(886, to-str)
												[]
												[call(infix, name-range(880, <=>), [], [a, b])])])
									call(
										prefix
										name-range(894, print)
										[]
										[
											call(
												infix
												name-range(909, to-str)
												[]
												[call(infix, name-range(903, <=>), [], [a, c])])]))
								call(
									prefix
									name-range(917, print)
									[]
									[
										call(
											infix
											name-range(932, to-str)
											[]
											[call(infix, name-range(926, <=>), [], [a, d])])])))))))])

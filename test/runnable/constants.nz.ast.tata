file-ast(
	imports: ports(range(0, 29), [import-ast(0, "/io", some([exit-code, print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(137, 169)
			true
			[]
			none
			record(
				none
				[
					field(range(155, 160), false, a, inststruct(range(157, 160), name-range(157, str)))
					field(range(162, 167), false, b, inststruct(range(164, 167), name-range(164, str)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(29, 58)
				main
				inststruct(range(34, 47), name-range(34, fut), [inststruct(range(38, 47), name-range(38, exit-code))])
				[
					param(
						range(48, 57)
						none
						inststruct(range(50, 57), name-range(50, arr), [inststruct(range(54, 57), name-range(54, str))]))])
			summon: true
			body: let(
				name-range(67, r)
				call(prefix, name-range(71, my-record), [], [literal("a"), literal("b")])
				seq-ast(
					seq-ast(
						seq-ast(
							call(prefix, name-range(92, foo), [], [r])
							call(prefix, name-range(100, print), [], [call(infix, name-range(109, a), [], [r])]))
						call(prefix, name-range(112, print), [], [call(infix, name-range(121, b), [], [r])]))
					call(prefix, name-range(124, resolved), [], [literal(nat(0, false))]))))
		fun-decl(
			public?: true
			sig: sig-ast(
				range(169, 190)
				foo
				inststruct(range(173, 177), name-range(173, void))
				[param(range(178, 189), some(r), inststruct(range(180, 189), name-range(180, my-record)))])
			summon: true
			body: seq-ast(
				call(prefix, name-range(199, print), [], [call(infix, name-range(208, a), [], [r])])
				call(prefix, name-range(211, print), [], [call(infix, name-range(220, b), [], [r])])))])

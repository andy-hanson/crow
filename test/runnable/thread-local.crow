import
	crow/io/print: out, print
	crow/ptr: *, mut-ptr, set-deref

main nat^(_ str[]) summon unsafe
	results <- for x : 0 .. 100 parallel
		*foo := x
		*foo := *foo + 1
		*foo,
	results is (1 .. 101).to-list
	out print "{results[99]}"
	()

foo nat64 mut*() thread-local

.parallel-range<a> record
	.inner range a
.parallel<a> parallel-range a(a range a)
	a,
.for-loop nat64[]^(a parallel-range nat64, f fun nat64^(nat64))
	tasks nat64^[] = for x : a.inner
		launch do () => f[x]
	tasks wait-all

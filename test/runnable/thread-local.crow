import
	crow/io/print: out, print

main nat^(_ string[]) summon, trusted
	results <- for x : 0 .. 100 parallel
		*foo := x
		*foo := *foo + 1
		*foo,
	results is (1 .. 101).to-list
	out print "{results[99]}"
	()

foo nat64 mut*() thread-local

.parallel-range[t] record
	.inner t range
.parallel[t] t parallel-range(a t range)
	a,
.for-loop nat64[]^(a nat64 parallel-range, f fun nat64^(nat64))
	tasks nat64^[] = for x : a.inner
		with : parallel
			f[x]
	tasks wait-all

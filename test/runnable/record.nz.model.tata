module(
	path: 20
	imports: [
		import(18, none)
		import(8, none)
		import(0, none)
		import(1, none)
		import(9, none)
		import(5, none)
		import(16, none)
		import(17, none)
		import(6, none)
		import(7, none)
		import(15, none)
		import(12, none)
		import(11, none)
		import(13, some([exit-code, print-sync]))]
	exports: []
	structs: [struct(range: file-range(20, range(34, 66)), public?: true, name: my-record)]
	specs: []
	funs: [
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(20, 66), main, fut(int32()), [param(file-range(20, range(85, 97)), args, arr(arr(char())))])
			body: let(
				local(file-range(20, range(107, 108)), m, my-record())
				call(
					fun-inst(name: my-record)
					[call(fun-inst(name: literal), [string-lit("1")]), call(fun-inst(name: literal), [string-lit("2")])])
				seq(
					seq(
						seq(
							seq(
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==, type-args: [nat()])
											[
												call(fun-inst(name: x), [local-ref(m)])
												call(fun-inst(name: literal), [string-lit("1")])])])
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==, type-args: [nat()])
											[
												call(fun-inst(name: y), [local-ref(m)])
												call(fun-inst(name: literal), [string-lit("2")])])]))
							call(
								fun-inst(name: print-sync)
								[call(fun-inst(name: to-str), [call(fun-inst(name: x), [local-ref(m)])])]))
						call(
							fun-inst(name: print-sync)
							[call(fun-inst(name: to-str), [call(fun-inst(name: y), [local-ref(m)])])]))
					call(
						fun-inst(name: resolved, type-args: [int32()])
						[call(fun-inst(name: literal), [string-lit("0")])]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(20, 34)
				my-record
				my-record()
				[param(file-range(20, range(52, 57)), x, nat()), param(file-range(20, range(59, 64)), y, nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(20, 34)
				my-record
				by-val(my-record())
				[param(file-range(20, range(52, 57)), x, nat()), param(file-range(20, range(59, 64)), y, nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(20, 52), x, nat(), [param(file-range(20, range(52, 57)), a, my-record())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(20, 59), y, nat(), [param(file-range(20, range(59, 64)), a, my-record())])
			body: field-get(1))])

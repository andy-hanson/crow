module(
	path: 40
	imports: [import(none, 38, none), import(some(range(8, 10)), 32, some([exit-code, print]))]
	exports: []
	structs: [struct(range: file-range(40, range(175, 206)), public?: true, name: my-record)]
	specs: []
	funs: [
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(40, 29), main, fut(int32()), [param(file-range(40, range(48, 57)), none, arr(arr(char())))])
			body: let(
				local(file-range(40, range(67, 68)), m, my-record())
				call(fun-inst(name: my-record), [literal(nat(), 1), literal(nat(), 2)])
				seq(
					seq(
						seq(
							seq(
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==, type-args: [nat()])
											[call(fun-inst(name: x), [local-ref(m)]), literal(nat(), 1)])])
								call(
									fun-inst(name: assert)
									[
										call(
											fun-inst(name: ==, type-args: [nat()])
											[call(fun-inst(name: y), [local-ref(m)]), literal(nat(), 2)])]))
							call(
								fun-inst(name: print)
								[call(fun-inst(name: to-str), [call(fun-inst(name: x), [local-ref(m)])])]))
						call(
							fun-inst(name: print)
							[call(fun-inst(name: to-str), [call(fun-inst(name: y), [local-ref(m)])])]))
					call(fun-inst(name: resolved, type-args: [int32()]), [literal(int32(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(40, 175)
				my-record
				my-record()
				[param(file-range(40, range(193, 198)), some(x), nat()), param(file-range(40, range(200, 205)), some(y), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(40, 175)
				my-record
				by-val(my-record())
				[param(file-range(40, range(193, 198)), some(x), nat()), param(file-range(40, range(200, 205)), some(y), nat())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(40, 193), x, nat(), [param(file-range(40, range(193, 198)), some(a), my-record())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(40, 200), y, nat(), [param(file-range(40, range(200, 205)), some(a), my-record())])
			body: field-get(1))])

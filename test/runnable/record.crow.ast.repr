file-ast(
	imports: ports(range(0, 46), [import-ast(0, "/bootstrap", some([fut, str])), import-ast(0, "/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(186, 217)
			true
			[]
			none
			record(
				none
				[
					field(range(204, 209), false, x, inststruct(range(206, 209), name-range(206, nat)))
					field(range(211, 216), false, y, inststruct(range(213, 216), name-range(213, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(46, 69)
				main
				inststruct(range(51, 58), name-range(51, fut), [inststruct(range(55, 58), name-range(55, nat))])
				[
					param(
						range(59, 68)
						none
						inststruct(range(61, 68), name-range(61, arr), [inststruct(range(65, 68), name-range(65, str))]))])
			summon: true
			body: let(
				name-range(78, m)
				call(prefix, name-range(82, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(99, assert)
									[]
									[
										call(
											infix
											name-range(111, ==)
											[]
											[call(dot, name-range(109, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(117, assert)
									[]
									[
										call(
											infix
											name-range(129, ==)
											[]
											[call(dot, name-range(127, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(135, print)
								[]
								[call(dot, name-range(146, to-str), [], [call(dot, name-range(144, x), [], [m])])]))
						call(
							prefix
							name-range(154, print)
							[]
							[call(dot, name-range(165, to-str), [], [call(dot, name-range(163, y), [], [m])])]))
					call(prefix, name-range(173, resolved), [], [literal(nat(0, false))]))))])

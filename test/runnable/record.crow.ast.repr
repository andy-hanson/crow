file-ast(
	imports: ports(range(0, 30), [import-ast("/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(170, 201)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(188, 193), false, x, inststruct(range(190, 193), name-range(190, nat)))
					field(range(195, 200), false, y, inststruct(range(197, 200), name-range(197, nat)))]))]
	funs: [
		fun-decl(
			public: true
			sig: sig-ast(
				range(30, 53)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[
					param(
						range(43, 52)
						none
						inststruct(range(45, 52), name-range(45, arr), [inststruct(range(49, 52), name-range(49, str))]))])
			summon: true
			body: let(
				name-range(62, m)
				call(prefix, name-range(66, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(83, assert)
									[]
									[
										call(
											infix
											name-range(95, ==)
											[]
											[call(dot, name-range(93, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(101, assert)
									[]
									[
										call(
											infix
											name-range(113, ==)
											[]
											[call(dot, name-range(111, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(119, print)
								[]
								[call(dot, name-range(130, to-str), [], [call(dot, name-range(128, x), [], [m])])]))
						call(
							prefix
							name-range(138, print)
							[]
							[call(dot, name-range(149, to-str), [], [call(dot, name-range(147, y), [], [m])])]))
					call(prefix, name-range(157, resolved), [], [literal(nat(0, false))]))))])

file-ast(
	imports: ports(range(0, 30), [import-ast("/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(168, 199)
			""
			true
			[]
			none
			record(
				none
				[
					field(range(186, 191), false, x, inststruct(range(188, 191), name-range(188, nat)))
					field(range(193, 198), false, y, inststruct(range(195, 198), name-range(195, nat)))]))]
	funs: [
		fun-decl(
			public: true
			sig: sig-ast(
				range(30, 51)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[param(range(43, 50), none, suffix(inststruct(range(45, 48), name-range(45, str)), arr))])
			summon: true
			body: let(
				name-range(60, m)
				call(prefix, name-range(64, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(81, assert)
									[]
									[
										call(
											infix
											name-range(93, ==)
											[]
											[call(dot, name-range(91, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(99, assert)
									[]
									[
										call(
											infix
											name-range(111, ==)
											[]
											[call(dot, name-range(109, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(117, print)
								[]
								[call(dot, name-range(128, to-str), [], [call(dot, name-range(126, x), [], [m])])]))
						call(
							prefix
							name-range(136, print)
							[]
							[call(dot, name-range(147, to-str), [], [call(dot, name-range(145, y), [], [m])])]))
					call(prefix, name-range(155, resolved), [], [literal(nat(0, false))]))))])

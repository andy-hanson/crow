file-ast(
	imports: ports(range(0, 30), [import-ast("/crow/io/print", some([print]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(167, 198)
			""
			public
			[]
			none
			record(
				none
				[
					field(range(185, 190), false, x, inststruct(range(187, 190), name-range(187, nat)))
					field(range(192, 197), false, y, inststruct(range(194, 197), name-range(194, nat)))]))]
	funs: [
		fun-decl(
			visibility: public
			sig: sig-ast(
				range(30, 51)
				main
				inststruct(range(35, 42), name-range(35, fut), [inststruct(range(39, 42), name-range(39, nat))])
				[param(range(43, 50), none, suffix(inststruct(range(45, 48), name-range(45, str)), arr))])
			summon: true
			body: let(
				m
				call(comma, name-range(74, new), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(80, assert)
									[]
									[
										call(
											infix
											name-range(92, ==)
											[]
											[call(dot, name-range(90, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(98, assert)
									[]
									[
										call(
											infix
											name-range(110, ==)
											[]
											[call(dot, name-range(108, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(116, print)
								[]
								[call(dot, name-range(127, to-str), [], [call(dot, name-range(125, x), [], [m])])]))
						call(
							prefix
							name-range(135, print)
							[]
							[call(dot, name-range(146, to-str), [], [call(dot, name-range(144, y), [], [m])])]))
					call(prefix, name-range(154, resolved), [], [literal(nat(0, false))]))))])

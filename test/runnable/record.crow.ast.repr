file-ast(
	imports: ports(range(0, 48), [import-ast(0, "/io/print", some([print])), import-ast(0, "/io/process", some([exit-code]))])
	specs: []
	aliases: []
	structs: [
		struct(
			range(194, 225)
			true
			[]
			none
			record(
				none
				[
					field(range(212, 217), false, x, inststruct(range(214, 217), name-range(214, nat)))
					field(range(219, 224), false, y, inststruct(range(221, 224), name-range(221, nat)))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(48, 77)
				main
				inststruct(range(53, 66), name-range(53, fut), [inststruct(range(57, 66), name-range(57, exit-code))])
				[
					param(
						range(67, 76)
						none
						inststruct(range(69, 76), name-range(69, arr), [inststruct(range(73, 76), name-range(73, str))]))])
			summon: true
			body: let(
				name-range(86, m)
				call(prefix, name-range(90, my-record), [], [literal(nat(1, false)), literal(nat(2, false))])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(
									prefix
									name-range(107, assert)
									[]
									[
										call(
											infix
											name-range(119, ==)
											[]
											[call(dot, name-range(117, x), [], [m]), literal(nat(1, false))])])
								call(
									prefix
									name-range(125, assert)
									[]
									[
										call(
											infix
											name-range(137, ==)
											[]
											[call(dot, name-range(135, y), [], [m]), literal(nat(2, false))])]))
							call(
								prefix
								name-range(143, print)
								[]
								[call(dot, name-range(154, to-str), [], [call(dot, name-range(152, x), [], [m])])]))
						call(
							prefix
							name-range(162, print)
							[]
							[call(dot, name-range(173, to-str), [], [call(dot, name-range(171, y), [], [m])])]))
					call(prefix, name-range(181, resolved), [], [literal(nat(0, false))]))))])

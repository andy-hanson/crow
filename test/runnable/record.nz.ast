file-ast(
	imports: [import-ast(0, "/io")]
	exports: []
	specs: []
	aliases: []
	structs: [
		struct(
			range(11, 43)
			true
			[]
			none
			record(
				none
				[
					field(range(29, 34), false, x, inststruct(range(31, 34), nat))
					field(range(36, 41), false, y, inststruct(range(38, 41), nat))]))]
	funs: [
		fun-decl(
			public?: true
			sig: sig-ast(
				range(43, 71)
				main
				inststruct(range(48, 57), fut, [inststruct(range(52, 57), int32)])
				[param(range(58, 70), args, inststruct(range(63, 70), arr, [inststruct(range(67, 70), str)]))])
			summon: true
			body: let(
				name-range(range(80, 81), m)
				new-record(some(inststruct(range(88, 97), my-record)), [literal(numeric, "1"), literal(numeric, "2")])
				seq-ast(
					seq-ast(
						seq-ast(
							seq-ast(
								call(assert, [], [call(==, [], [call(x, [], [m]), literal(numeric, "1")])])
								call(assert, [], [call(==, [], [call(y, [], [m]), literal(numeric, "2")])]))
							call(print-sync, [], [call(to-str, [], [call(x, [], [m])])]))
						call(print-sync, [], [call(to-str, [], [call(y, [], [m])])]))
					call(resolved, [], [literal(numeric, "0")]))))])

module(
	path: 75
	imports: [import(none, 57, none), import(some(range(8, 28)), 44, some([print]))]
	structs: [struct(range: file-range(75, range(130, 162)), public: true, name: my-record)]
	funs: [
		fun(
			public: true
			summon: true
			sig: sig(file-pos(75, 30), main, fut(nat64()), [param(file-range(75, range(43, 50)), none, arr(str()))])
			body: let(
				local(file-range(75, range(60, 61)), r, my-record())
				call(fun-inst(name: my-record), [string-lit("a"), string-lit("b")])
				seq(
					seq(
						seq(
							call(fun-inst(name: foo), [local-ref(r)])
							call(fun-inst(name: print), [call(fun-inst(name: a), [local-ref(r)])]))
						call(fun-inst(name: print), [call(fun-inst(name: b), [local-ref(r)])]))
					call(fun-inst(name: resolved, type-args: [nat64()]), [literal(nat64(), 0)]))))
		fun(
			public: true
			summon: true
			sig: sig(file-pos(75, 162), foo, void(), [param(file-range(75, range(171, 182)), some(r), my-record())])
			body: seq(
				call(fun-inst(name: print), [call(fun-inst(name: a), [param-ref(r)])])
				call(fun-inst(name: print), [call(fun-inst(name: b), [param-ref(r)])])))
		fun(
			public: true
			preferred: true
			sig: sig(
				file-pos(75, 130)
				my-record
				my-record()
				[param(file-range(75, range(148, 153)), some(a), str()), param(file-range(75, range(155, 160)), some(b), str())])
			body: new-record)
		fun(
			public: true
			no-ctx: true
			sig: sig(
				file-pos(75, 130)
				my-record
				by-val(my-record())
				[param(file-range(75, range(148, 153)), some(a), str()), param(file-range(75, range(155, 160)), some(b), str())])
			body: new-record)
		fun(
			public: true
			no-ctx: true
			sig: sig(file-pos(75, 148), a, str(), [param(file-range(75, range(148, 153)), some(a), my-record())])
			body: field-get(0))
		fun(
			public: true
			no-ctx: true
			sig: sig(file-pos(75, 155), b, str(), [param(file-range(75, range(155, 160)), some(a), my-record())])
			body: field-get(1))])

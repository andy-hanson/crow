module(
	path: 56
	imports: [import(none, 42, none), import(some(range(8, 33)), 0, some([fut, str, void])), import(some(range(35, 50)), 31, some([print]))]
	exports: []
	structs: [struct(range: file-range(56, range(154, 186)), public?: true, name: my-record)]
	specs: []
	funs: [
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(56, 52), main, fut(nat()), [param(file-range(56, range(65, 74)), none, arr(arr(char())))])
			body: let(
				local(file-range(56, range(84, 85)), r, my-record())
				call(fun-inst(name: my-record), [string-lit("a"), string-lit("b")])
				seq(
					seq(
						seq(
							call(fun-inst(name: foo), [local-ref(r)])
							call(fun-inst(name: print), [call(fun-inst(name: a), [local-ref(r)])]))
						call(fun-inst(name: print), [call(fun-inst(name: b), [local-ref(r)])]))
					call(fun-inst(name: resolved, type-args: [nat()]), [literal(nat(), 0)]))))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(56, 186), foo, void(), [param(file-range(56, range(195, 206)), some(r), my-record())])
			body: seq(
				call(fun-inst(name: print), [call(fun-inst(name: a), [param-ref(r)])])
				call(fun-inst(name: print), [call(fun-inst(name: b), [param-ref(r)])])))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(56, 154)
				my-record
				my-record()
				[
					param(file-range(56, range(172, 177)), some(a), arr(char()))
					param(file-range(56, range(179, 184)), some(b), arr(char()))])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(56, 154)
				my-record
				by-val(my-record())
				[
					param(file-range(56, range(172, 177)), some(a), arr(char()))
					param(file-range(56, range(179, 184)), some(b), arr(char()))])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 172), a, arr(char()), [param(file-range(56, range(172, 177)), some(a), my-record())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 179), b, arr(char()), [param(file-range(56, range(179, 184)), some(a), my-record())])
			body: field-get(1))])

module(
	path: 56
	imports: [import(none, 42, none), import(some(range(8, 27)), 0, some([fut, str])), import(some(range(29, 44)), 31, some([print]))]
	exports: []
	structs: [struct(range: file-range(56, range(46, 86)), public?: true, name: rect)]
	specs: []
	funs: [
		fun(
			public?: true
			sig: sig(file-pos(56, 86), area, float(), [param(file-range(56, range(97, 103)), some(a), rect())])
			body: call(
				fun-inst(name: *)
				[call(fun-inst(name: width), [param-ref(a)]), call(fun-inst(name: height), [param-ref(a)])]))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(56, 126), main, fut(nat()), [param(file-range(56, range(139, 148)), none, arr(arr(char())))])
			body: let(
				local(file-range(56, range(158, 159)), r, rect())
				call(
					fun-inst(name: rect)
					[
						literal(float(), 1.5)
						literal(float(), 2.5)])
				seq(
					call(
						fun-inst(name: print)
						[call(fun-inst(name: to-str), [call(fun-inst(name: area), [local-ref(r)])])])
					call(fun-inst(name: resolved, type-args: [nat()]), [literal(nat(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(56, 46)
				rect
				rect()
				[
					param(file-range(56, range(59, 70)), some(width), float())
					param(file-range(56, range(72, 84)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(56, 46)
				rect
				by-val(rect())
				[
					param(file-range(56, range(59, 70)), some(width), float())
					param(file-range(56, range(72, 84)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 59), width, float(), [param(file-range(56, range(59, 70)), some(a), rect())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 72), height, float(), [param(file-range(56, range(72, 84)), some(a), rect())])
			body: field-get(1))])

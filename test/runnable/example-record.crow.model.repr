module(
	path: 56
	imports: [import(none, 42, none), import(some(range(8, 23)), 31, some([print])), import(some(range(25, 34)), 23, some([*]))]
	exports: []
	structs: [struct(range: file-range(56, range(36, 76)), public?: true, name: rect)]
	specs: []
	funs: [
		fun(
			public?: true
			sig: sig(file-pos(56, 76), area, float(), [param(file-range(56, range(87, 93)), some(a), rect())])
			body: call(
				fun-inst(name: *)
				[call(fun-inst(name: width), [param-ref(a)]), call(fun-inst(name: height), [param-ref(a)])]))
		fun(
			public?: true
			summon: true
			sig: sig(file-pos(56, 116), main, fut(nat()), [param(file-range(56, range(129, 138)), none, arr(arr(char())))])
			body: let(
				local(file-range(56, range(148, 149)), r, rect())
				call(
					fun-inst(name: rect)
					[
						literal(float(), 1.5)
						literal(float(), 2.5)])
				seq(
					call(
						fun-inst(name: print)
						[call(fun-inst(name: to-str), [call(fun-inst(name: area), [local-ref(r)])])])
					call(fun-inst(name: resolved, type-args: [nat()]), [literal(nat(), 0)]))))
		fun(
			public?: true
			preferred: true
			sig: sig(
				file-pos(56, 36)
				rect
				rect()
				[
					param(file-range(56, range(49, 60)), some(width), float())
					param(file-range(56, range(62, 74)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(
				file-pos(56, 36)
				rect
				by-val(rect())
				[
					param(file-range(56, range(49, 60)), some(width), float())
					param(file-range(56, range(62, 74)), some(height), float())])
			body: new-record)
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 49), width, float(), [param(file-range(56, range(49, 60)), some(a), rect())])
			body: field-get(0))
		fun(
			public?: true
			no-ctx: true
			sig: sig(file-pos(56, 62), height, float(), [param(file-range(56, range(62, 74)), some(a), rect())])
			body: field-get(1))])

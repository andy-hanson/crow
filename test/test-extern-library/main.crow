main void()
	trusted
		&my_void_fn f_void
		assert some-var == 42

	false f_bool &my_bool_fn is true
	8 f_int8 &my_int8_fn is 9
	16 f_int16 &my_int16_fn is 17
	32 f_int32 &my_int32_fn is 33
	64 f_int64 &my_int64_fn is 65
	8 f_nat8 &my_nat8_fn is 9
	16 f_nat16 &my_nat16_fn is 17
	32 f_nat32 &my_nat32_fn is 33
	64 f_nat64 &my_nat64_fn is 65
	3.2 f_float32 &my_float32_fn is 3.3
	6.4 f_float64 &my_float64_fn is 6.5
	n nat64 = 64
	assert trusted (&n f_nat64_ptr &my_nat64_ptr_fn) == &n

	(false, 64) f_struct_a &my_struct_a_fn is (true, 65)
	(true, (false, 64)) f_struct_b &my_struct_b_fn is (false, (true, 65))

	# Union can't be 'extern', but test creating and calling a fun*
	fptr union_a function(x union_a) = &my_union_a_fn
	fptr[(false, 64).sa] is (false, (true, 65)).sb

	info log "done"
	()

-f_void void(f void function()) example extern, pure, trusted
-f_bool bool(a bool, f bool function(x bool)) example extern, pure, trusted
-f_int8 int8(a int8, f int8 function(x int8)) example extern, pure, trusted
-f_int16 int16(a int16, f int16 function(x int16)) example extern, pure, trusted
-f_int32 int32(a int32, f int32 function(x int32)) example extern, pure, trusted
-f_int64 int64(a int64, f int64 function(x int64)) example extern, pure, trusted
-f_nat8 nat8(a nat8, f nat8 function(x nat8)) example extern, pure, trusted
-f_nat16 nat16(a nat16, f nat16 function(x nat16)) example extern, pure, trusted
-f_nat32 nat32(a nat32, f nat32 function(x nat32)) example extern, pure, trusted
-f_nat64 nat64(a nat64, f nat64 function(x nat64)) example extern, pure, trusted
-f_float32 float32(a float32, f float32 function(x float32)) example extern, pure, trusted
-f_float64 float64(a float64, f float64 function(x float64)) example extern, pure, trusted
-f_nat64_ptr nat64*(a nat64*, f nat64* function(x nat64*)) example extern, pure, trusted
-f_struct_a struct_a(
	a struct_a,
	f struct_a function(x struct_a),
) example extern, pure, trusted
-f_struct_b struct_b(
	a struct_b,
	f struct_b function(x struct_b),
) example extern, pure, trusted

-struct_a record extern
	b bool
	n nat64
-== bool(a struct_a, b struct_a)
-to json(a struct_a)

-struct_b record extern
	b bool
	a struct_a
-== bool(a struct_b, b struct_b)
-to json(a struct_b)

-union_a union(sa struct_a, sb struct_b)
-== bool(a union_a, b union_a)
-to json(a union_a)

some-var thread-local(nat)

-my_void_fn void() unsafe
	some-var := 42
	()

-my_bool_fn bool(a bool)
	a is false
	true

-my_int8_fn int8(a int8)
	a is 8
	a + 1

-my_int16_fn int16(a int16)
	a is 16
	a + 1

-my_int32_fn int32(a int32)
	a is 32
	a + 1

-my_int64_fn int64(a int64)
	a is 64
	a + 1

-my_nat8_fn nat8(a nat8)
	a is 8
	a + 1

-my_nat16_fn nat16(a nat16)
	a is 16
	a + 1

-my_nat32_fn nat32(a nat32)
	a is 32
	a + 1

-my_nat64_fn nat64(a nat64)
	a is 64
	a + 1

-my_float32_fn float32(a float32)
	a is 3.2
	a + 0.1

-my_float64_fn float64(a float64)
	a is 6.4
	a + 0.1

-my_nat64_ptr_fn nat64*(a nat64*) unsafe
	*a is 64
	a

-my_struct_a_fn struct_a(a struct_a) unsafe
	a is (false, 64)
	true, 65

-my_struct_b_fn struct_b(a struct_b) unsafe
	a is (true, (false, 64))
	false, (true, 65)

-my_union_a_fn union_a(a union_a) unsafe
	a is (false, 64).sa
	(false, (true, 65)).sb

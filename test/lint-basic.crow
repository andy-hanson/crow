#!/usr/bin/env crow
import
	crow/io/file: each-child-recursive, read-file
	crow/io/path: base-name, get-extension
	crow/io/print: out, print
	./failure: failure, new, print-failures

main nat(_ string[]) summon
	files = list-lintable-files
	failures = for file : files parallel-concat; file lint-file
	if failures is-empty
		out print "linted {files size} files"
		0
	else
		failures print-failures

-list-lintable-files string[]() summon
	res string mut[] = ()
	"." each-child-recursive (child => !child.excluded-from-lint), child =>
		unless child.base-name should-ignore-extension-of-name
			res ~= child
	res move-to

-excluded-from-lint bool(name string)
	if name starts-with "." || name in exclude-names
		true
	elif ext ?= name get-extension
		ext in exclude-extensions

-exclude-extensions string set()
	"bmp", "dll", "err", "exe", "ilk", "lib", "mdb", "obj", "ogg", "otf", "pdb", "png", "svg",
		"ttf", "vsix", "wasm", "wav", "woff2"
-exclude-names string set()
	"bin", "COPYING.txt", "crow.sublime-syntax", "dyncall", "invalid-utf8.crow", "node_modules",
		"not-utf8.txt", "package-lock.json", "site", "trailing-indent.crow"

-lint-file failure[](path string) summon
	text string = path read-file
	res failure mut[] = ()
	ext = path.get-extension!
	allow-double-space = ext == "err" || ext == "sublime-syntax"
	max-line-length = path max-line-length
	for line-num, line : text.lines with-index
		ln = line-num + 1
		space-space = " " ~~ " "
		if !allow-double-space && line contains-seq space-space
			res ~= (path, "line {ln} contains a double space")
		width = line line-len
		if width > max-line-length
			res ~= (path, "line {ln} is {width} columns long, should be <= {max-line-length}")
		if (line ends-with " " || line ends-with "\t") &&
				path != "./test/end-to-end/runnable/tabs.crow"
			res ~= (path, "line {ln} has trailing whitespace")
	res move-to

-ignored-extensions string set()
	"c", "data", "json", "o", "out", "repr", "tmLanguage"

-should-ignore-extension bool(ext string)
	ext in ignored-extensions

-should-ignore-extension-of-name bool(name string)
	if ext ?= name get-extension
		# Ignore 'lint-basic.xyz' where xyz is random hex (happens when running with '--aot')
		ext.should-ignore-extension || name starts-with "lint-basic."
	else
		# Ignore extensionless files since those are executables
		name != "GNUmakefile" && name != "NMakefile"

-max-line-length nat(path string)
	path ends-with ".crow" ? 100 : 120

-n-tabs nat(line string)
	if rest ?= line try-remove-start "\t"
		rest.n-tabs + 1

-tab-size nat()
	4

-line-len nat(line string)
	line.n-tabs * (tab-size - 1) + line.size

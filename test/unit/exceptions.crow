dummy-exceptions nat()
	0

# Unlike 'finally' and 'try' with a block, 'try =' should work in a loop.
test
	n mut nat = 4
	results nat mut[] = ()
	loop
		try res nat = 12 / n catch divide-by-0 : break
		results ~= res
		n -:= 1
		continue
	n is 0
	results.to::nat[] is (3, 4, 6, 12)

test
	n nat? = do
		try x nat = 1 / 0 catch divide-by-0
		x + 1,
	n is ()

test
	try
		finally throw "thrown second" error
		throw "thrown first" error
	catch error e
		e is "thrown second"

import
	crow/math/math
	crow/parse

dummy-math-tests nat()
	0

test
	test-t@float32
	test-t@float64

-to float64(a string)
	(float parse a)!
-to float32(a string)
	a.to::float64 to

-big-negative float32()
	-22877332
-big-negative float64()
	-286411383293069

-float[t] spec t compare
	- t(a t)

	+ t(a t, b t)
	- t(a t, b t)
	* t(a t, b t)
	/ t(a t, b t)

	big-negative t()
	pi t()
	pi_2 t()
	pi_4 t()

	abs t(a t)
	acos t(a t)
	acosh t(a t)
	asin t(a t)
	asinh t(a t)
	atan t(a t)
	atan2 t(y t, x t)
	atanh t(a t)
	cos t(a t)
	cosh t(a t)
	sin t(a t)
	sinh t(a t)
	tan t(a t)
	tanh t(a t)
	square-root t(a t)
	to t(a string)
	to string(a t)
	to json(a t)

-test-t[t] void() t float
	zero t = "0" to
	one t = "1" to
	two t = "2" to
	three t = "3" to
	one + two is three

	4::float64.square-root is 2
	try
		_ float64 = -1 square-root
		should-throw
	catch float-out-of-range x
		x.input is -1

	(-one).acos is-about pi
	zero.acos is-about pi_2
	one.acos is zero

	(-one)::t.asin is-about -pi_2
	zero::t.asin is zero
	one::t.asin is-about pi_2

	(-one)::t.atan is-about -pi_4
	zero::t.atan is zero
	one::t.atan is-about pi_4

	zero::t.cos is one
	pi_4::t.cos is-about two.square-root/two
	# TODO: compiler needs to parse '-0' as a different float than 0
	pi_2::t.cos is-about -zero
	pi::t.cos is -one

	0::float64.sin is 0
	pi_4::float64.sin is-about 2.square-root/2
	pi_2::float64.sin is 1
	pi::t.sin is-about -zero

	zero::t.tan is zero
	pi_4::t.tan is-about one
	assert pi_2::t.tan <= big-negative
	(three * pi_4).tan is-about -one
	pi::t.tan is-about zero

	one atan2 one is-about pi_4
	one atan2 zero is-about pi_2
	zero atan2 -one is-about pi

	zero.cosh is one
	one-cosh t = one cosh
	one-cosh is-about "1.543".to
	one::t.acosh is zero
	one-cosh.acosh is-about one

	zero::t.sinh is zero
	zero::t.asinh is zero
	one-sinh t = one sinh
	one-sinh is-about "1.175".to
	one-sinh.asinh is-about one

	zero.tanh is zero
	zero.atanh is zero
	one-tanh = one tanh
	one-tanh is-about "0.761".to
	one-tanh.atanh is-about one

# TODO: these tests should use exact answers, but the compiler needs better float parsing
-is-about[t] void(a t, b t) t float
	diff = a - b
	assert diff.abs < "0.0006".to : "Expected {a} is-about {b}" error

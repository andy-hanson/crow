# This file is for Windows.
# WARN: If editing this file, you might need to change GNUmakefile too.

.PHONY: clone-dyncall debug end-to-end-test end-to-end-test-overwrite serve prepare-site test unit-test

clean:
	@call <<COMMANDS.bat
@if exist bin rmdir /s /q bin
:: rmdir has an exit code of 0 even on failure!
@if exist bin exit 1
@if exist site rmdir /s /q site
@if exist site exit 1
<<

all: clean test lint serve

### test ###

test: unit-test crow-unit-tests test-extern-library end-to-end-test

unit-test: bin\crow-debug.exe
	.\bin\crow-debug.exe test

crow-unit-tests: bin\crow.exe
	.\bin\crow.exe run test\crow-unit-tests.crow
	.\bin\crow.exe run test\crow-unit-tests.crow --aot
	.\bin\crow.exe run test\crow-unit-tests.crow --aot --optimize

test-extern-library: bin\crow.exe bin\example.dll bin\example.lib
	.\bin\crow run test\test-extern-library\main.crow
	.\bin\crow run test\test-extern-library\main.crow --aot

bin\example.lib: bin\example.obj
	lib bin\example.obj /nologo /out:bin/example.lib

bin\example.dll: bin\example.obj
	link bin\example.obj /nologo /dll /out:bin/example.dll

bin\example.obj: test\test-extern-library\example.c
	cl /std:c17 /Wall /WX /wd4820 /c test\test-extern-library\example.c /nologo /Fobin\example.obj

end-to-end-test: bin\crow.exe
	.\bin\crow.exe run test\end-to-end\main.crow

end-to-end-test-overwrite: bin\crow.exe
	.\bin\crow.exe run test\end-to-end\main.crow -- --overwrite-output

### external dependencies ###

dyncall:
	@call <<COMMANDS.bat
hg clone https://dyncall.org/pub/dyncall/dyncall/
cd dyncall
call .\configure.bat /target-x64
nmake /f Nmakefile
<<

### D build ###

all_src_files = src\*.d \
	src\app\*.d \
	src\backend\*.d \
	src\concretize\*.d \
	src\document\*.d \
	src\frontend\*.d \
	src\frontend\check\*.d \
	src\frontend\check\checkCall\*.d \
	src\frontend\ide\*.d \
	src\frontend\parse\*.d \
	src\interpret\*.d \
	src\lib\*.d \
	src\lib\lsp\*.d \
	src\lower\*.d \
	src\model\*.d \
	src\test\*.d \
	src\test\hover\* \
	src\util\*.d \
	src\util\alloc\*.d \
	src\util\col\*.d
d_dependencies = $(all_src_files) bin\d-imports\date.txt bin\d-imports\commit-hash.txt dyncall

d_flags_common = -w -betterC -preview=dip1000 -preview=in -J=bin\d-imports -J=src\backend -J=src\test -J=include
dmd_flags_assert = $(d_flags_common) -check=on -boundscheck=on
ldc_flags_debug = --d-debug -g --d-version=Debug --d-version=Test
ldc_flags_assert = $(d_flags_common) --enable-asserts=true --boundscheck=on
ldc_wasm_flags = -mtriple=wasm32-unknown-unknown-wasm -L-allow-undefined
ldc_fast_flags = -O2 --d-version=TailRecursionAvailable
ldc_fast_flags_no_tail_call = -O2

# /FORCE:MULTIPLE is to allow overriding '_assert'
app_link = -L=dyncall\dyncall\dyncall_s.lib -L=dyncall\dyncallback\dyncallback_s.lib -L=dyncall\dynload\dynload_s.lib \
	-L=/stack:16777216 -L=/FORCE:MULTIPLE -L=/ignore:4006 -L=/ignore:4088

app_files_no_test = $(app_only_files) $(src_files_no_test)
app_files_with_test = $(app_only_files) $(src_files_with_test)

bin\d-imports:
	if not exist "bin\d-imports" mkdir bin\d-imports

# TODO: UTC option for 'date'?
bin\d-imports\date.txt: bin\d-imports
	echo %date:~10,4%-%date:~4,2%-%date:~7,2% > bin\d-imports\date.txt

bin\d-imports\commit-hash.txt: bin\d-imports
	git rev-parse --short HEAD > bin\d-imports\commit-hash.txt

bin\crow-dmd.exe: $(d_dependencies)
	dmd -ofbin\crow-dmd.exe -m64 $(dmd_flags_assert) -debug -g -version=Debug -version=Test \
		src\app\main.d -I=src -i $(app_link)

bin\crow-debug.exe: $(d_dependencies)
	ldc2 -ofbin\crow-debug.exe $(ldc_flags_assert) --m64 $(ldc_flags_debug) src\app\main.d -I=src -i $(app_link)

bin\crow.exe: $(d_dependencies)
	ldc2 -ofbin\crow.exe $(ldc_flags_assert) --m64 $(ldc_fast_flags) src\app\main.d -I=src -i $(app_link)
	del bin\crow.obj

bin\crow-debug.wasm: $(d_dependencies)
	ldc2 -ofbin\crow-debug.wasm $(debug_flags) $(ldc_flags_assert) $(ldc_wasm_flags) -O1 src\wasm.d -I=src -i
	del bin\crow-debug.o

bin\crow.wasm: $(d_dependencies)
	ldc2 -ofbin\crow.wasm $(ldc_flags_assert) $(ldc_wasm_flags) $(ldc_fast_flags_no_tail_call) src\wasm.d -I=src -i
	del bin\crow.o

### lint ###

lint: lint-basic lint-dscanner lint-d-imports-exports bin\dependencies.dot

lint-basic: bin\crow.exe
	.\bin\crow.exe run test\lint-basic.crow

lint-dscanner:
	dub run dscanner -- --styleCheck src

lint-d-imports-exports: bin\crow.exe
	.\bin\crow.exe run test\lint-d-imports-exports.crow

show-dependencies: bin/dependencies.svg
	start bin/dependencies.svg

bin\dependencies.svg: bin\dependencies.dot
	dot -Tsvg -o bin\dependencies.svg bin\dependencies.dot

bin\dependencies.dot: bin\crow.exe test\dependencies.crow
	.\bin\crow.exe run test\dependencies.crow

### site ###

prepare-site: bin\crow.exe bin\crow.wasm bin\crow-windows-x64.tar.xz bin\crow-demo-windows.tar.xz bin\crow.vsix
	bin\crow run site-src\site.crow

# TODO: This should be `bin\crow run site-src\serve.crow`,
# but currently Crow doesn't have a Windows server implementation
serve: prepare-site
	python -m http.server -d site

### publish ###

bin\crow-windows-x64.tar.xz: bin\crow.exe include\*
	tar --create --xz --file bin\crow-windows-x64.tar.xz bin\crow.exe include

bin\crow-demo-windows.tar.xz: demo\*
	xcopy /i /s /q demo crow-demo
	:: Remove demos that don't work on Windows
	del crow-demo\http-request.crow crow-demo\server.crow
	rmdir /s /q crow-demo\lmdb crow-demo\webapp
	rmdir /s /q crow-demo\libraries\lmdb
	tar --create --xz --file bin\crow-demo-windows.tar.xz crow-demo
	rmdir /s /q crow-demo

bin\crow.vsix: editor\vscode\* editor\vscode\node_modules
	cd editor\vscode && node .\node_modules\@vscode\vsce\vsce package --allow-missing-repository --out ..\..\bin\crow.vsix

install-vscode-extension: bin\crow.vsix
	code --install-extension bin\crow.vsix

editor\vscode\node_modules:
	cd editor/vscode
	npm install

# Only upload Windows-specific files. Everything else is uploaded by 'GNUmakefile'.
aws_upload_command = aws s3 sync site s3://crow-lang.org --exclude "*" \
	--include "bin\crow-windows-x64.tar.xz" --include "bin\crow-demo-windows.tar.xz"

confirm-upload-site:
	$(aws_upload_command) --dryrun
	@call <<CONFIRM.bat
@set /p yesno="Make these changes to crow-lang.org? [y/n]"
@if "%yesno%"=="y" goto end
@exit 1
:end
<<

upload-site: prepare-site confirm-upload-site
	$(aws_upload_command)

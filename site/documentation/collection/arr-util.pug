// generated by `crow doc`
include ../../pug-include/documentation.pug
+documentationPage("collection.arr-util")
	section
		+function("exists?", ["?t"], "bool", [["a", "arr ?t"], ["pred", "fun-act1<bool, ?t>"]])
		+function("contains?", ["?t"], "bool", [["a", "arr ?t"], ["value", "?t"]])
			| TODO: only written this way to be `noctx`, else could defer to `some?`
		+function("starts-with?", ["?t"], "bool", [["a", "arr ?t"], ["start", "arr ?t"]])
		+function("ends-with?", ["?t"], "bool", [["a", "arr ?t"], ["end", "arr ?t"]])
		+function("find-index", ["?t"], "opt nat", [["a", "arr ?t"], ["pred", "fun-act1<bool, ?t>"]])
		+function("find-rindex", ["?t"], "opt nat", [["a", "arr ?t"], ["pred", "fun-act1<bool, ?t>"]])
		+function("first", ["?t"], "?t", [["a", "arr ?t"]])
		+function("last", ["?t"], "?t", [["a", "arr ?t"]])
		+function("remove-start", ["?t"], "arr ?t", [["a", "arr ?t"], ["start", "arr ?t"]])
		+function("fill-arr", ["?t"], "arr ?t", [["size", "nat"], ["value", "?t"]])
		+function("make-arr", ["?t"], "arr ?t", [["size", "nat"], ["f", "fun-act1<?t, nat>"]])
		+function("zip", ["?out", "?a", "?b"], "arr ?out", [["a", "arr ?a"], ["b", "arr ?b"], ["cb", "fun-act2<?out, ?a, ?b>"]])
		+function("map", ["?out", "?in"], "arr ?out", [["a", "arr ?in"], ["mapper", "fun-act1<?out, ?in>"]])
		+function("join", ["?t"], "arr ?t", [["a", "arr arr ?t"], ["joiner", "arr ?t"]])
		+function("rtail", ["?t"], "arr ?t", [["a", "arr ?t"]])
		+function("tail", ["?t"], "arr ?t", [["a", "arr ?t"]])
		+function("each", ["?t"], "void", [["a", "arr ?t"], ["f", "fun-act1<void, ?t>"]])
		+function("r-index-of", ["?t"], "opt nat", [["a", "arr ?t"], ["value", "?t"]])
		+function("index-of", ["?t"], "opt nat", [["a", "arr ?t"], ["value", "?t"]])
		+function("first-some", ["?out", "?in"], "opt ?out", [["a", "arr ?in"], ["cb", "fun-act1<opt ?out, ?in>"]])
		+function("remove-end", ["?t"], "arr ?t", [["a", "arr ?t"], ["end", "arr ?t"]])
		+function("fold", ["?a", "?b"], "?a", [["val", "?a"], ["a", "arr ?b"], ["combine", "fun-act2<?a, ?a, ?b>"]])
		+function("count-subseqs", ["?t"], "nat", [["a", "arr ?t"], ["subseq", "arr ?t"]])
		+function("split-by-subseq", ["?t"], "arr arr ?t", [["a", "arr ?t"], ["splitter", "arr ?t"]])
		+function("try-remove-end", ["?t"], "opt arr ?t", [["a", "arr ?t"], ["end", "arr ?t"]])
		+function("try-remove-start", ["?t"], "opt arr ?t", [["a", "arr ?t"], ["start", "arr ?t"]])
		+function("index-of-subseq", ["?t"], "opt nat", [["a", "arr ?t"], ["subseq", "arr ?t"]])
		+function("contains-subseq?", ["?t"], "bool", [["a", "arr ?t"], ["subseq", "arr ?t"]])
		+function("contains-recur?", ["?t"], "bool", [["a", "arr ?t"], ["value", "?t"], ["i", "nat"]])
		+function("each-with-index", ["?t"], "void", [["a", "arr ?t"], ["f", "fun-act2<void, ?t, nat>"]])

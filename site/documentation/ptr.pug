// generated by `crow doc`
include ../pug-include/documentation.pug
+documentationPage("ptr")
	section
		+builtinType("by-val", ["?t"])
		+builtinType("ptr", ["?t"])
			|A raw pointer. GC will not trace these.
			|WARN: If ?t is a reference type, ptr<?t> is a pointer to a pointer to ?t
		+alias("any-ptr", [], "ptr nat8")
		+function("ptr-less?", ["?t"], "bool", [["a", "ptr ?t"], ["b", "ptr ?t"]])
		+function("ptr-less-eq?", ["?t"], "bool", [["a", "ptr ?t"], ["b", "ptr ?t"]])
		+function("ptr-eq?", ["?t"], "bool", [["a", "ptr ?t"], ["b", "ptr ?t"]])
		+function("ref-eq?", ["?t"], "bool", [["a", "?t"], ["b", "?t"]])
		+function("null?", ["?t"], "bool", [["a", "ptr ?t"]])
		+function("ptr-cast", ["?out", "?in"], "ptr ?out", [["p", "ptr ?in"]])
		+function("magic-cast", ["?out", "?in"], "?out", [["p", "?in"]])
		+function("subscript", ["?t"], "?t", [["a", "ptr ?t"]])
		+function("subscript", ["?t"], "?t", [["a", "ptr ?t"], ["n", "nat"]])
		+function("to-nat", ["?t"], "nat", [["p", "ptr ?t"]])
		+function("as-any-ptr", ["?t"], "ptr nat8", [["ref", "?t"]])
			| TODO: this function only works for by-ref types -- currently that is not checked by the type checker
		+function("ref-of-ptr", ["?t"], "?t", [["p", "ptr by-val ?t"]])
		+function("ptr-to", ["?t"], "ptr ?t", [["t", "?t"]])
			|This forces something to be stack-allocated.
			|WARN: If '?t' is a reference type already, this is a pointer to a pointer!
		+function("null", ["?t"], "ptr ?t", [])
		+function("ref-of-val", ["?t"], "?t", [["b", "by-val ?t"]])
			| Unsafe because the ref will only be valid temporarily!
		+function("size-of", ["?t"], "nat", [])
			| WARN: for a reference type, this is the size of a pointer
		+function("as-ref", ["?t"], "?t", [["p", "ptr nat8"]])
			| TODO: this function only works for by-ref types -- currently that is not checked by the type checker
		+function("ptr-compare", ["?t"], "comparison", [["a", "ptr ?t"], ["b", "ptr ?t"]])
		+function("-", ["?t"], "ptr ?t", [["p", "ptr ?t"], ["offset", "nat"]])
		+function("-", ["?t"], "nat", [["a", "ptr ?t"], ["b", "ptr ?t"]])
		+function("+", ["?t"], "ptr ?t", [["p", "ptr ?t"], ["offset", "nat"]])
		+function("ptr-cast-from-extern", ["?out", "?int"], "ptr ?out", [["p", "?int"]])
			| TODO: require that ?in be an extern-ptr type
		+function("ptr-cast-to-extern", ["?out", "?in"], "?out", [["p", "ptr ?in"]])
			| TODO: require that ?out be an extern-ptr type
		+function("set-subscript", ["?t"], "void", [["a", "ptr ?t"], ["value", "?t"]])
		+function("set-subscript", ["?t"], "void", [["a", "ptr ?t"], ["n", "nat"], ["value", "?t"]])

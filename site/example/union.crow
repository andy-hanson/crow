import
	crow/io/print: print
	crow/math/vec: -, length-squared, vec-2, x, y

main fut nat(_ str[]) summon
	c = as<hitbox>: (1.0 vec-2 1.0) circle 1.0
	print: 1.7 vec-2 1.7 in c to-str
	print: 1.7 vec-2 1.8 in c to-str
	r = rect: 1.0, 2.0, 3.0, 4.0
	print: 1.1 vec-2 3.0 in r to-str
	print: 1.1 vec-2 2.9 in r to-str
	print: 0.0 vec-2 0.0 in empty to-str
	0 resolved

in bool(v vec-2, h hitbox)
	match h
	as circle c
		(v - c.center).length-squared <= c.radius ** 2
	as rect r
		r.left <= v.x && v.x <= r.right && r.bottom <= v.y && v.y <= r.top
	as empty
		false

hitbox union
	circle
	rect
	empty

circle record
	center vec-2
	radius float

rect record
	left float
	right float
	bottom float
	top float

empty record

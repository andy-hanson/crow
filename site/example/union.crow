import
	crow.io.print: print
	crow.math.vec: -, length-squared, vec-2, x, y

main fut nat(_ arr str) summon
	c = (1.0 vec-2 1.0) circle 1.0
	print: c contains? (1.7 vec-2 1.7) to-str
	print: c contains? (1.7 vec-2 1.8) to-str
	r = rect: 1.0, 2.0, 3.0, 4.0
	print: r contains? (1.1 vec-2 3.0) to-str
	print: r contains? (1.1 vec-2 2.9) to-str
	print: empty contains? (0.0 vec-2 0.0) to-str
	0 resolved

contains? bool(a hitbox, p vec-2)
	match a
	as circle c
		(p - c.center).length-squared <= c.radius ** 2
	as rect r
		r.left <= p.x && p.x <= r.right && r.bottom <= p.y && p.y <= r.top
	as empty
		false

hitbox union
	circle
	rect
	empty

circle record
	center vec-2
	radius float

rect record
	left float
	right float
	bottom float
	top float

empty record

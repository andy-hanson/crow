import
	crow/col/mut-set
	crow/col/set
	crow/io/print: print
	crow/str-util: join

main fut nat(_ str[]) summon
	chili set sym = 'beans', 'pepper', 'onion', 'beans'
	print: "size: {chili size}"
	print: "has pepper? {chili['pepper']}"
	print: "has potato? {chili['potato']}"

	pepper-spray set sym = 'pepper', 'onion', 'spray bottle'
	print: "union: {chili | pepper-spray}"
	print: "intersection: {chili & pepper-spray}"
	print: "difference: {chili - pepper-spray}"

	m mut-set sym = 'beans', 'pepper', 'onion'
	print: "has pepper? {'pepper' in m}"
	print: "remove pepper? {m try-remove! 'pepper'}"
	print: "remove pepper again? {m try-remove! 'pepper'}"
	m ~= ("spray bottle", "cumin")
	print: "after concat: {m move-to-set!}"

	0 resolved

to-str str(a set sym)
	a.to-arr map (x => x to-str) join ", "

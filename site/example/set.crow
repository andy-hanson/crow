import
	col.arr-util: flatten
	col.mut-set: ~=, move-to-set!, mut-set, remove!, subscript
	col.set: -, ~, arr, intersect, set, size, subscript
	io.print: print

main fut nat(_ arr str) summon
	chili = set: ["beans", "pepper", "onion", "beans"]
	print: "size: " ~ chili.size.to-str
	print: "has pepper? " ~ chili["pepper"].to-str
	print: "has potato? " ~ chili["potato"].to-str

	pepper-spray = set: ["pepper", "onion", "spray bottle"]
	print: "union: " ~: (chili ~ pepper-spray).arr flatten ", "
	print: "intersection: " ~: (chili intersect pepper-spray).arr flatten ", "
	print: "difference: " ~: (chili - pepper-spray).arr flatten ", "

	m = mut-set: ["beans", "pepper", "onion"]
	print: "has pepper? " ~ m["pepper"].to-str
	print: "remove pepper? " ~: m remove! "pepper" to-str
	print: "remove pepper again? " ~: m remove! "pepper" to-str
	m ~= ["spray bottle", "cumin"]
	print: "after concat: " ~: m.move-to-set!.arr flatten ", "

	0 resolved

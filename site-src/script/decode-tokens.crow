import
	crow/js: cast, js-any
	./lsp-types: new, token, tokens-legend, token-modifiers, token-types

decode-tokens token[](a js-any, legend tokens-legend) unsafe, js extern
	encoded nat[] = for x : a.cast::js-any[]; x.cast::float.to
	with out : build
		prev-line mut nat = 0
		prev-character mut nat = 0
		i mut nat = 0
		next nat mut() = () =>
			res = encoded[i]
			i +:= 1
			res
		while i < encoded.size
			line-delta = next[]
			character-delta = next[]
			line nat, character nat = if line-delta == 0
				prev-line, prev-character + character-delta
			else
				prev-line + line-delta, character-delta
			prev-line := line
			prev-character := character
			length = next[]
			type = legend.token-types[next[]]
			modifiers = next[] decode-modifiers legend.token-modifiers
			out ~= (line, character, length, type, modifiers)

-decode-modifiers symbol[](encoded nat, legend symbol[])
	assert legend.size == 1
	assert encoded == 0 || encoded == 1
	encoded == 0 ? () : legend

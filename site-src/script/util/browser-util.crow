import
	crow/js: ==, as-js, await, call-new, call-property, cast, js-any, js-global, null, set-subscript, subscript
	./dom-util: create-node
	./js-util: new

copy-text-to-clipboard void(text string) summon, trusted, js extern
	_ = "navigator".js-global["clipboard"] call-property "writeText", text await

download-text void(name string, text string) summon, trusted, js extern
	link = "a" create-node
	blob = "Blob".js-global call-new (text,)::(string array), \
		(("type", "text/crow"::string.as-js),)::js-any
	url = "URL".js-global call-property "createObjectURL", blob
	link.as-js["href"] := url
	link.as-js["download"] := name
	_ = link.as-js call-property "click"

get-url-search string?(name string) summon, trusted, js extern
	res = "URLSearchParams".js-global call-new location.search call-property "get", name
	unless res == null
		res.cast,

location record
	-inner js-any
to string(a location) trusted, js extern
	a.inner call-property "toString" cast
location location() summon, trusted, js extern
	window = "window" js-global
	window["location"],
origin string(a location) trusted, js extern
	a.inner["origin"] cast
pathname string(a location) trusted, js extern
	a.inner["pathname"] cast
search string(a location) trusted, js extern
	a.inner["search"] cast
hash string(a location) trusted, js extern
	a.inner["hash"] cast

push-history void(url string) trusted, js extern
	history = "history" js-global
	_ = history call-property "pushState", (("path", url.as-js),)::js-any, ""::string, url

import
	crow/io/file: try-read-file
	crow/io/net/http-server: http-handler, http-server, with-block
	crow/io/net/http-types: http-not-found, http-request, http-response, new, status, url
	crow/io/path: child-path
	crow/io/print: out, print
	crow/io/stdin: read-stdin

main nat^(_ string[]) summon
	port nat16 = 8080
	handler http-handler = req =>
		res = req handle-request
		info log "{req url} {res status}"
		res,
	with _ : port http-server handler
		out print "serving on http://localhost:{port}/"
		out print "press enter to stop"
		_ <- read-stdin

-handle-request http-response(a http-request) summon
	path = "site" child-path a.url
	if content ?= path.try-read-file :: nat8[]?
		path file-response content
	else
		index = path child-path "index.html"
		if content ?= index.try-read-file :: nat8[]?
			index file-response content
		else
			http-not-found

file-response http-response(path string, content nat8[])
	200, "OK", (("Content-Type", path.content-type),), content

content-type string(path string)
	if path ends-with ".html"
		"text/html"
	elif path ends-with ".css"
		"text/css"
	elif path ends-with ".js"
		"text/javascript"
	elif path ends-with ".json"
		"text/json"
	elif path ends-with ".svg"
		"image/svg+xml"
	elif path ends-with ".wasm"
		"application/wasm"
	else
		"text/plain"

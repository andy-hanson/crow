import
	crow/io/print: out, print

main nat^(_ string[]) summon
	chili symbol set = "beans", "pepper", "onion", "beans"
	out print "size: {chili size}"
	# TODO: should not need type annotation
	out print "has pepper? {"pepper"::symbol in chili}"
	# TODO: should not need type annotation
	out print "has potato? {"potato"::symbol in chili}"

	pepper-spray symbol set = "pepper", "onion", "spray bottle"
	out print "union: {chili | pepper-spray}"
	out print "intersection: {chili & pepper-spray}"
	out print "difference: {chili - pepper-spray}"

	m symbol mut-set = "beans", "pepper", "onion"
	# TODO: should not need type annotation
	out print "has pepper? {"pepper"::symbol in m}"
	out print "remove pepper? {m try-remove "pepper"}"
	out print "remove pepper again? {m try-remove "pepper"}"
	m ~~= ("spray bottle", "cumin")
	out print "after concat: {m.move-to::(symbol set)}"
	()

to string(a symbol set)
	", " join for x : a; "{x}"

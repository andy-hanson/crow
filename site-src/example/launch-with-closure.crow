import
	crow/io/print: out, print

main nat^(_ string[]) summon
	adder <- 0 make-store
	tasks nat^[] = for x : 0 .. 10
		with : parallel
			adder.get-and-set[x + 1]
	values <- tasks wait-all
	final-value <- adder.get[]
	out print "values: {", " join for x : values; "{x}"}"
	out print "final value: {final-value}"
	()

store record sendable
	get ref nat()
	get-and-set ref nat(nat)

make-store store^(initial-value nat)
	with : parallel
		cur mut nat = initial-value
		get ref nat() = () => cur,
		get-and-set ref nat(nat) = x =>
			prev-value = cur
			cur := x
			prev-value,
		(get, get-and-set),

import
	crow/col/arr-util: map
	crow/io/print: print
	crow/str-util: join, reverse

main fut nat(_ str[]) summon
	print: call-it: x => x + 1 to-str
	print: call-it: x =>
		twice = x * 2
		twice to-str
	print: call-it-2: (x, y) => x + y to-str
	print: call-it-2: (x, y) =>
		product = x * y
		product to-str

	xs str[] = "crow", "crime"
	print: xs map (x => x reverse) join ", "
	()

call-it str(f fun str(nat))
	f[3]

call-it-2 str(f fun str(nat, nat))
	f[3, 4]

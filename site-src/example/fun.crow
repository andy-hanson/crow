import
	crow/io/print: out, print

main nat^(_ string[]) summon
	xs string[] = "crow", "bar", "sea", "weed"
	ys = xs map-pairs (x, y) => "{x}-{y}"
	zs = ys map-pairs (x, y) =>
		"{x}, {y}"
	out print ("; " join zs)
	()

# converts (a, b, c, d, ...) to (f[a, b], f[c, d], ...)
map-pairs string[](xs string[], f fun string(string, string))
	if xs.size >= 2
		f[xs[0], xs[1]] ~ (xs[2 .. xs.size] map-pairs f)

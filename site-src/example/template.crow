import
	crow/io/print: out, print

main fut nat(_ str[]) summon
	nats list nat = 1 ~ (2 ~ ())
	floats list float = 0.5 ~ ()
	out print "nats size: {nats size}"
	out print "floats size: {floats size}"
	0,

list<a> record
	head node<a>?

node<a> record
	value a
	next list a

new<a> list a()
	(),

~<a> list a(head a, tail list a)
	((head, tail),),

size<a> nat(a list a)
	0 fold a, (acc, _) =>
		acc + 1

fold<a, b> a(acc a, list list b, f act a(a, b))
	if node ?= list head
		f[acc, node.value] fold node.next, f
	else
		acc

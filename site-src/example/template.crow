import
	crow/io/print: out, print

main nat^(_ string[]) summon
	nats nat linked-list = 1 ~ (2 ~ ())
	floats float linked-list = 0.5 ~ ()
	out print "nats size: {nats size}"
	out print "floats size: {floats size}"
	0,

linked-list[t] record
	head t list-node?

list-node[t] record
	value t
	next t linked-list

new[t] t linked-list()
	(),

~ ~[t] t linked-list(head t, tail t linked-list)
	((head, tail),),

size[t] nat(a t linked-list)
	res mut = 0
	for _ : a
		res := res + 1
	res

iterate[t] bool(list t linked-list, f act bool(t))
	if node ?= list head
		f[node.value] || node.next iterate f

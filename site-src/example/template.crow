import
	crow/io/print: out, print

main nat^(_ string[]) summon
	nats linked-list nat = 1 ~ (2 ~ ())
	floats linked-list float = 0.5 ~ ()
	out print "nats size: {nats size}"
	out print "floats size: {floats size}"
	0,

linked-list<a> record
	head list-node<a>?

list-node<a> record
	value a
	next linked-list a

new<a> linked-list a()
	(),

~<a> linked-list a(head a, tail linked-list a)
	((head, tail),),

size<a> nat(a linked-list a)
	res mut = 0
	for _ : a
		res := res + 1
	res

for-loop<a> void(list linked-list a, f act void(a))
	if node ?= list head
		f[node.value]
		node.next for-loop f
